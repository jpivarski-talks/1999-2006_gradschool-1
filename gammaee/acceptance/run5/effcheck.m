<< Graphics`Graphics`;
<< Statistics`DiscreteDistributions`;

boosted1s = Round[#]& /@ ({24.7099, 52.1653, 326.969, 394.748, 719.941, 1096.55, 1648.61,
1421.39, 1459.65, 1161.54, 840.193, 461.58, 127.439, 170.354, 9.04408,
26.5402, 13.7277, 0, 0, 0, 0, 0, 0, 0} * 1000);
cascadetracks1s = Round[#]& /@ ({16, 47.7857, 337.513, 363.342, 785.721, 879.657, 1417.59, 1490.59,
1520.97, 1129.93, 776.64, 557.445, 335.597, 172.914, 103.592, 1.00008,
4.4, 10.4286, 0.666666, 1, 1, 0, 0, 0} * 1000);
cascadetracks1shigh = Round[#]& /@ ({16 + Sqrt[4^2 + 8.24^2], 47.7857 + Sqrt[11.41^2 + 11.97^2],
337.513, 363.342, 785.721, 879.657, 1417.59, 1490.59, 1520.97,
1129.93, 776.64, 557.445, 335.597, 172.914, 103.592, 1.00008, 4.4,
10.4286, 0.666666, 1, 1, 0, 0, 0} * 1000);

(* Table[Print["ve/inp ax0m("<>ToString[i]<>") "<>ToString[axialtotracks[[1,i]]]], {i, 1, 19}]; *)

(* gettrack[n_] := If[n>30, 0, N[axialtotracks[[5,n+1]] / (Plus @@ axialtotracks[[5]])]]; *)
(* gettrack2[n_] := If[n>30, 0, N[axialtotracksdata[[5,n+1]] / (Plus @@ axialtotracksdata[[5]])]]; *)
(* convol[n_, p_] := Sum[gettrack[n+k]*((n+k)!/k!/n!)*(1-p)^n*(p)^k, {k, 0, 30}]; *)

(* Sum[gettrack[i]*i, {i, 0, 15}] *)

(* Out[43]= 4.29314 *)

(* Sum[gettrack2[i]*i, {i, 0, 15}] *)

(* Out[44]= 3.93682 *)

(* Sum[convol[i, 0.083]*i, {i, 0, 15}] *)

(* Out[52]= 3.93681 *)

(* BarChart[Table[convol[i, 0.083], {i, 0, 10}], Table[gettrack2[i], {i, 0, 10}]]; *)

gettrack[n_, i_] := If[n>30, 0, N[axialtotracks[[i,n+1]] / (Plus @@ axialtotracks[[i]])]];
convol[n_, p_, i_] := Sum[gettrack[n+k, i]*((n+k)!/k!/n!)*(1-p)^n*(p)^k, {k, 0, 30}];
axialtotrackssmear = Table[If[i>20, 0, Round[convol[n, 0.083, i] * 100000]], {i, 1, 31}, {n, 0, 30}];




tracks1s = {579, 824, 2006, 3975, 9603, 13701, 21878, 21341, 23734,
16895, 13466, 7424, 4539, 1996, 895, 321, 133, 32, 15, 3, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0};
tracks2s = {653, 894, 3436, 4681, 10243, 13556, 22277, 23936, 27632,
22158, 19051, 11991, 7825, 3875, 2012, 848, 345, 111, 33, 11, 4, 0, 0,
1, 0, 0, 0, 0, 0, 0, 0};
tracks3s = {305, 399, 1663, 2137, 5030, 7267, 12096, 12945, 15469,
12424, 10951, 6904, 4775, 2438, 1243, 521, 247, 88, 36, 7, 9, 3, 0, 0,
0, 0, 0, 0, 0, 0, 0};
cblototracks1s = 
{{17, 32, 75, 137, 111, 77, 48, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {15, 26, 58, 128, 132, 130, 105, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {9, 30, 78, 166, 253, 291, 297, 882, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {8, 25, 96, 184, 390, 498, 608, 2166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {6, 38, 119, 310, 633, 1061, 1383, 6053, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {3, 18, 102, 293, 650, 1206, 1861, 9568, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2, 14, 74, 298, 751, 1532, 2617, 16590, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 12, 49, 189, 565, 1223, 2280, 17023, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 4, 24, 136, 402, 1148, 2087, 19933, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1, 0, 10, 65, 242, 671, 1328, 14578, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 1, 11, 43, 160, 435, 953, 11863, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 1, 3, 18, 61, 225, 479, 6637, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 2, 6, 32, 106, 232, 4161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 1, 3, 15, 44, 103, 1830, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 5, 22, 46, 822, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 2, 5, 20, 294, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 8, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 2, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 1, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
cbmdtotracks1s = 
{{136, 88, 173, 153, 22, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {230, 189, 199, 155, 42, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {632, 587, 420, 263, 86, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1469, 1391, 736, 269, 87, 21, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {3423, 3538, 1848, 621, 140, 29, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {5725, 5176, 2157, 551, 84, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {9289, 8517, 3244, 696, 111, 19, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {10315, 8158, 2408, 409, 43, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {12083, 8845, 2425, 352, 27, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {9496, 5963, 1305, 123, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {7930, 4564, 872, 93, 5, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {4784, 2249, 358, 32, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {3067, 1254, 199, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1426, 507, 57, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {655, 222, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {244, 72, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {98, 33, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {25, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {12, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
cblototracks2s =
{{24, 80, 84, 130, 128, 81, 35, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {54, 65, 77, 110, 146, 129, 87, 226, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {86, 163, 353, 635, 567, 429, 311, 892, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {46, 139, 376, 410, 399, 480, 568, 2263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {46, 148, 543, 648, 668, 911, 1284, 5995, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {4, 27, 96, 274, 569, 1047, 1626, 9913, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {4, 13, 72, 267, 668, 1428, 2298, 17527, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2, 11, 48, 200, 524, 1163, 2188, 19800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1, 4, 28, 136, 435, 1072, 2112, 23844, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 2, 17, 75, 276, 761, 1521, 19506, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 1, 10, 56, 195, 460, 1114, 17215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 1, 4, 26, 88, 270, 635, 10967, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 9, 11, 36, 155, 416, 7198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 2, 4, 18, 64, 149, 3638, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 1, 13, 29, 81, 1888, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 2, 16, 40, 790, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 1, 4, 10, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 1, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 1, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
cbmdtotracks2s = 
{{231, 91, 160, 141, 26, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {315, 203, 199, 132, 37, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1415, 774, 851, 317, 65, 13, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1774, 1463, 957, 380, 91, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {3731, 3516, 2105, 697, 159, 31, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {5355, 5121, 2287, 650, 120, 21, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {8863, 8751, 3616, 855, 163, 27, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {10782, 9163, 3268, 637, 75, 8, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {13014, 10548, 3431, 571, 59, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {11641, 8123, 2058, 302, 28, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {10334, 6878, 1641, 176, 17, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {7149, 3929, 821, 87, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {4949, 2405, 432, 34, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2592, 1134, 135, 12, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1434, 497, 78, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {607, 213, 27, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {256, 81, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {92, 18, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {22, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
cblototracks3s =
{{18, 30, 38, 61, 57, 39, 24, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {15, 25, 41, 63, 58, 55, 46, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {20, 84, 188, 321, 237, 209, 155, 449, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {17, 38, 104, 129, 198, 238, 257, 1156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {9, 32, 111, 223, 348, 522, 621, 3164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {8, 21, 49, 140, 314, 580, 845, 5310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1, 10, 41, 114, 336, 732, 1237, 9625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2, 3, 18, 95, 266, 602, 1113, 10846, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2, 2, 9, 89, 221, 546, 1126, 13474, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 11, 42, 133, 384, 809, 11045, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 9, 26, 62, 244, 564, 10046, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 2, 15, 49, 148, 340, 6350, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 2, 8, 25, 62, 195, 4483, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 11, 36, 87, 2304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 1, 1, 11, 38, 1192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 1, 3, 4, 18, 495, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 5, 3, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 4, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 1, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
cbmdtotracks3s = 
{{107, 35, 88, 57, 14, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {137, 92, 81, 69, 18, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {663, 409, 394, 158, 32, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {741, 719, 427, 192, 48, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1715, 1761, 1050, 367, 111, 23, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2621, 2837, 1313, 410, 76, 8, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {4620, 4664, 2138, 557, 105, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {5390, 5080, 2033, 389, 49, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {6777, 6014, 2249, 390, 35, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {6094, 4701, 1384, 224, 19, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {5577, 4083, 1122, 156, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {3883, 2400, 543, 74, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2828, 1597, 316, 32, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1547, 719, 158, 13, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {810, 372, 57, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {360, 139, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {171, 67, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {52, 34, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {31, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {5, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {5, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
axialtotracks =
{{104, 208, 146, 38, 42, 15, 16, 6, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {9, 234, 315, 79, 79, 48, 32, 19, 7, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {7, 106, 1091, 372, 205, 101, 60, 37, 14, 10, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 22, 397, 1851, 1023, 346, 196, 80, 42, 12, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 5, 212, 1474, 5069, 1676, 744, 258, 91, 39, 22, 10, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 53, 413, 2444, 6080, 3083, 1027, 358, 160, 59, 18, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 24, 151, 1209, 5508, 9815, 3313, 1248, 378, 154, 53, 15, 8, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 6, 30, 328, 1752, 5712, 8251, 3534, 1140, 403, 123, 44, 13, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 3, 5, 86, 650, 2995, 7702, 8214, 2750, 903, 276, 103, 35, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 2, 20, 128, 811, 2798, 5260, 5030, 1971, 598, 198, 56, 18, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 2, 4, 29, 209, 1077, 2952, 4400, 3214, 1092, 353, 96, 27, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 2, 5, 41, 277, 874, 1712, 2212, 1505, 564, 159, 50, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 1, 11, 65, 245, 762, 1196, 1223, 678, 248, 67, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 1, 2, 18, 62, 203, 396, 533, 455, 214, 85, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 1, 3, 10, 48, 106, 200, 230, 177, 76, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 3, 12, 36, 65, 83, 54, 32, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 9, 22, 27, 29, 24, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 5, 4, 5, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
stereotoaxial =
{{120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {67, 508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {82, 352, 1813, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {44, 254, 1063, 3056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {32, 163, 900, 3101, 6315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {14, 82, 449, 1743, 5140, 8912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {6, 31, 203, 863, 2971, 7813, 11841, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {2, 12, 81, 330, 1109, 3594, 8542, 11261, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1, 4, 24, 94, 410, 1396, 3712, 7934, 9342, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1, 2, 5, 32, 121, 387, 1240, 2959, 5678, 6235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {1, 1, 2, 6, 34, 111, 365, 949, 2118, 3568, 3536, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 6, 12, 29, 90, 237, 590, 1168, 1901, 1691, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 1, 2, 7, 24, 61, 147, 316, 598, 867, 741, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 5, 5, 23, 35, 74, 127, 275, 315, 241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 1, 0, 3, 5, 8, 14, 37, 67, 87, 101, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 1, 4, 5, 14, 22, 34, 46, 55, 46, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
perfectaxial = IdentityMatrix[31];
perfectstereo = IdentityMatrix[31];
axialtotracksdata =
{{948, 111, 3156, 331, 82, 19, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {6, 2455, 481, 191, 37, 11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {3, 72, 9376, 188, 32, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 1, 111, 316, 81, 15, 6, 6, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 2, 21, 134, 300, 71, 14, 4, 5, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 5, 24, 96, 221, 75, 21, 16, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 3, 6, 45, 170, 338, 93, 32, 12, 6, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 2, 9, 71, 199, 256, 107, 35, 15, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 2, 4, 21, 104, 242, 260, 90, 30, 12, 7, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 7, 27, 96, 169, 154, 63, 26, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 1, 1, 2, 11, 44, 104, 173, 123, 45, 18, 9, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 2, 10, 44, 77, 73, 56, 24, 7, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 1, 9, 38, 45, 49, 29, 11, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 2, 6, 9, 33, 21, 17, 18, 12, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 5, 25, 21, 22, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 6, 8, 10, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 7, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
stereotoaxialdata =
{{945, 0, 11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {204, 2419, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {1847, 1089, 10217, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {256, 214, 289, 436, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {48, 49, 88, 209, 292, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {10, 6, 31, 82, 172, 313, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 2, 10, 28, 122, 243, 378, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 7, 10, 39, 118, 272, 327, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 1, 7, 17, 49, 131, 245, 303, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {1, 0, 0, 1, 5, 18, 41, 91, 223, 218, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 1, 4, 14, 34, 78, 129, 140, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 2, 1, 6, 10, 32, 55, 77, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 1, 1, 6, 13, 27, 41, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 2, 4, 8, 8, 21, 31, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 4, 6, 9, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 5, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};

cblomdmixup[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks2s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks2s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks2s[[tracks+1]]];
			  (cblo < cbmd)),
			 cblomdmixup[]]];
p = Length[Select[Table[cblomdmixup[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[4]= {0., 0.}  cblo < cbmd for 2s

Out[4]= {0., 0.}  cblo < cbmd for 2s

Out[8]= {0.0101, 0.00100494}  how often does this happen on a trigger failure?  10 times more likely than otherwise

Out[7]= {0.009, 0.00299986}  how often does this happen on a trigger failure?

Out[6]= {0.178, 0.0133298}  how often is cblo < cbmd?

cblomdmixup3[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks3s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks3s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks3s[[tracks+1]]];
			  (cblo < cbmd)),
			 cblomdmixup3[]]];
p = Length[Select[Table[cblomdmixup3[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[5]= {0., 0.}  cblo < cbmd for 3s




rand[x_List] := Module[{s, tmp, n, summ},
		       s = Plus @@ x;
		       If[s != 0, (
			   tmp = Random[Integer, s-1];
			   n = 1;
			   summ = x[[n]];
			   While[tmp >= summ, (n++; summ += x[[n]])];
			   n-1), -1]];
trial1smc[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1smc[]]), trial1smc[]]];
trial2smc[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks2s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks2s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks2s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial2smc[]]), trial2smc[]]];
trial3smc[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks3s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks3s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks3s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial3smc[]]), trial3smc[]]];
trial1sdata[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracksdata[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxialdata[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1sdata[]]), trial1sdata[]]];
trial2sdata[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks2s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks2s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks2s[[tracks+1]]];
			  axial = rand[axialtotracksdata[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxialdata[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial2sdata[]]), trial2sdata[]]];
trial3sdata[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks3s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks3s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks3s[[tracks+1]]];
			  axial = rand[axialtotracksdata[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxialdata[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial3sdata[]]), trial3sdata[]]];

p = Length[Select[Table[trial1smc[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[6]= {99.671, 0.0181085}

p = Length[Select[Table[trial1sdata[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[7]= {99.555, 0.021048}

p = Length[Select[Table[trial2smc[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[8]= {99.543, 0.0213287}

p = Length[Select[Table[trial2sdata[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[9]= {99.416, 0.0240954}

p = Length[Select[Table[trial3smc[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[10]= {99.635, 0.0190701}

p = Length[Select[Table[trial3sdata[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[11]= {99.488, 0.0225694}

trial1sboosted[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[boosted1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1sboosted[]]), trial1sboosted[]]];
trial1scascade[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[cascadetracks1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1scascade[]]), trial1scascade[]]];
trial1scascadehigh[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[cascadetracks1shigh];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1scascadehigh[]]), trial1scascadehigh[]]];
trial1sperfectstereo[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[perfectstereo[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1sperfectstereo[]]), trial1sperfectstereo[]]];
trial1sperfectboth[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[perfectaxial[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[perfectstereo[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1sperfectboth[]]), trial1sperfectboth[]]];

p = Length[Select[Table[trial1sboosted[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[13]= {99.583, 0.020378} (* after fix *)

Out[16]= {99.622, 0.0194054} (* before fix *)

p = Length[Select[Table[trial1scascade[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[14]= {99.649, 0.0187021}

Out[17]= {99.651, 0.0186489}

p = Length[Select[Table[trial1scascadehigh[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[15]= {99.614, 0.0196089}

Out[18]= {99.605, 0.0198353}

p = Length[Select[Table[trial1sperfectstereo[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[16]= {99.785, 0.0146471}

Out[40]= {99.788, 0.0145448}

p = Length[Select[Table[trial1sperfectboth[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[17]= {99.432, 0.023765}

Out[41]= {99.414, 0.0241364}


gettrack[n_] := If[n>30, 0, N[tracks1s[[n+1]] / (Plus @@ tracks1s)]];
convol[n_] := Sum[gettrack[n+k]*((n+k)!/k!/n!)*(1-0.02)^n*(0.02)^k, {k, 0, 30}];
convoluted1s = Table[Round[convol[i] * 143361 * 10], {i, 0, 30}];
trial1sconvoluted[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[convoluted1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1sconvoluted[]]), trial1sconvoluted[]]];
p = Length[Select[Table[trial1sconvoluted[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[24]= {99.689, 0.0176077} (* after fix *)

Out[1503]= {99.326, 0.0258739} (* after fix *)


gettrack[n_] := If[n>30, 0, N[tracks2s[[n+1]] / (Plus @@ tracks2s)]];
convol[n_] := Sum[gettrack[n+k]*((n+k)!/k!/n!)*(1-0.02)^n*(0.02)^k, {k, 0, 30}];
convoluted2s = Table[Round[convol[i] * 143361 * 10], {i, 0, 30}];
trial2sconvoluted[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[convoluted2s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks2s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks2s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial2sconvoluted[]]), trial2sconvoluted[]]];
p = Length[Select[Table[trial2sconvoluted[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[5]= {99.532, 0.0215826}

gettrack[n_] := If[n>30, 0, N[tracks3s[[n+1]] / (Plus @@ tracks3s)]];
convol[n_] := Sum[gettrack[n+k]*((n+k)!/k!/n!)*(1-0.02)^n*(0.02)^k, {k, 0, 30}];
convoluted3s = Table[Round[convol[i] * 143361 * 10], {i, 0, 30}];
trial3sconvoluted[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[convoluted3s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks3s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks3s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial3sconvoluted[]]), trial3sconvoluted[]]];
p = Length[Select[Table[trial3sconvoluted[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[6]= {99.64, 0.0189395}







gettrack[n_] := If[n>30, 0, N[tracks1s[[n+1]] / (Plus @@ tracks1s)]];
convol[n_] := Sum[gettrack[n+k]*((n+k)!/k!/n!)*(1-0.20)^n*(0.20)^k, {k, 0, 30}];
convoluted1s = Table[Round[convol[i] * 143361 * 10], {i, 0, 30}];
trial1sconvolutedenough[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[convoluted1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1sconvolutedenough[]]), trial1sconvolutedenough[]]];
p = Length[Select[Table[trial1sconvolutedenough[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[27]= {99.329, 0.0258166} (* 20% inefficiency *)

Out[26]= {97.108, 0.052994} (* 50% inefficiency *)

Out[25]= {99.581, 0.0204266} (* 10% inefficiency *)




gettrack[n_] := If[n>30, 0, N[tracks1s[[n+1]] / (Plus @@ tracks1s)]];
unconvol[n_] := (gettrack[n] - gettrack[n+1]*(n+1)*(0.02-0.015)) / (1 - n*(0.02-0.015));
Table[Round[unconvol[i] * 143361 * 10], {i, 0, 30}] // InputForm

unconvoluted1s = {5749, 8080, 19660, 38405, 94495, 133791, 217846,
 211312, 239310, 169861, 137449, 75679, 46907, 20678, 9365, 3355,
 1416, 335, 162, 33, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0};
trial1sunconvoluted[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[unconvoluted1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1sunconvoluted[]]), trial1sunconvoluted[]]];
p = Length[Select[Table[trial1sunconvoluted[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[45]= {99.688, 0.0176359} (* 2%-1.5% de-convolution *)

Out[43]= {99.705, 0.0171502} (* 2%+1.5% de-convolution *)

Out[39]= {99.76, 0.0154733} (* 5% de-convolution *)

Out[32]= {99.691, 0.0175512} (* 2% de-convolution *)



gettrack[n_] := If[n>30, 0, N[tracks3s[[n+1]] / (Plus @@ tracks3s)]];
unconvol[n_] := (gettrack[n] - gettrack[n+1]*(n+1)*(0.02)) / (1 - n*(0.02));
Table[Round[unconvol[i] * 143361 * 10], {i, 0, 30}] // InputForm

unconvoluted3s = {4392, 5016, 23639, 27285, 69162, 95542, 172790,
 180011, 232927, 184533, 174330, 109151, 80567, 41760, 22317, 9335,
 4720, 1681, 770, 81, 191, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0};
unconvoluted3shigh = {4303, 4330, 22872, 23671, 64616, 84717, 167035,
 168692, 237304, 185444, 188646, 117771, 93451, 49620, 28107, 11912,
 6541, 2385, 1253, 31, 335, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0};
unconvoluted3slow = {4480, 5682, 24359, 30569, 73151, 104702, 177477,
 188867, 229644, 183880, 164534, 103541, 72617, 37178, 19141, 8012,
 3850, 1370, 574, 100, 143, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0};
unconvoluted2slow = {5295, 7055, 27760, 37106, 82521, 107930, 180472,
 193182, 226544, 181308, 158076, 99552, 65784, 32610, 17107, 7242,
 2978, 964, 287, 96, 36, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0};
unconvoluted2shigh = {5076, 5529, 25852, 29623, 74729, 87867, 169639,
 175193, 234211, 184645, 181326, 115569, 85340, 43285, 25085, 11256,
 5177, 1819, 567, 200, 109, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0};
unconvoluted2s = {5186, 6304, 26836, 33543, 78879, 98735, 175610,
 185285, 229830, 182702, 167522, 105867, 73246, 36541, 19932, 8604,
 3690, 1226, 368, 124, 54, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0};

trial2sunconvoluted[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[unconvoluted2s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks2s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks2s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial2sunconvoluted[]]), trial2sunconvoluted[]]];
trial2sunconvolutedhigh[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[unconvoluted2shigh];
		      If[tracks != -1, (
			  cblo = rand[cblototracks2s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks2s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial2sunconvolutedhigh[]]), trial2sunconvolutedhigh[]]];
trial2sunconvolutedlow[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[unconvoluted2slow];
		      If[tracks != -1, (
			  cblo = rand[cblototracks2s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks2s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial2sunconvolutedlow[]]), trial2sunconvolutedlow[]]];
trial3sunconvoluted[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[unconvoluted3s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks3s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks3s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial3sunconvoluted[]]), trial3sunconvoluted[]]];
trial3sunconvolutedhigh[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[unconvoluted3shigh];
		      If[tracks != -1, (
			  cblo = rand[cblototracks3s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks3s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial3sunconvolutedhigh[]]), trial3sunconvolutedhigh[]]];
trial3sunconvolutedlow[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[unconvoluted3slow];
		      If[tracks != -1, (
			  cblo = rand[cblototracks3s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks3s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial3sunconvolutedlow[]]), trial3sunconvolutedlow[]]];

p = Length[Select[Table[trial2sunconvoluted[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[14]= {99.605, 0.0198353}

p = Length[Select[Table[trial2sunconvolutedhigh[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[15]= {99.619, 0.019482}

p = Length[Select[Table[trial2sunconvolutedlow[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[16]= {99.551, 0.021142}

p = Length[Select[Table[trial3sunconvoluted[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[17]= {99.673, 0.0180536}

p = Length[Select[Table[trial3sunconvolutedhigh[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[18]= {99.719, 0.0167395}

p = Length[Select[Table[trial3sunconvolutedlow[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[19]= {99.679, 0.0178877}






















cascadetracks1shighenough = Round[#]& /@ ({16 + 30, 47.7857, 337.513,
363.342, 785.721, 879.657, 1417.59, 1490.59, 1520.97, 1129.93, 776.64,
557.445, 335.597, 172.914, 103.592, 1.00008, 4.4, 10.4286, 0.666666,
1, 1, 0, 0, 0} * 1000);
trial1scascadehighenough[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[cascadetracks1shighenough];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracks[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1scascadehighenough[]]), trial1scascadehighenough[]]];
p = Length[Select[Table[trial1scascadehighenough[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[6]= {99.547, 0.0212355}  (* 30 after fix *)

Out[18]= {99.351, 0.0253927} (* 100 after fix *)

Out[11]= {99.124, 0.0294674} (* 200 after fix *)

Out[21]= {99.037, 0.0308825} (* 200 before fix *)

Out[20]= {99.339, 0.0256248} (* 100 before fix *)

trial1sdataboth[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[cascadetracks1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotracksdata[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxialdata[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1sdataboth[]]), trial1sdataboth[]]];
p = Length[Select[Table[trial1sdataboth[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[10]= {99.474, 0.0228743}







trial1smcsmear[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks1s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks1s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks1s[[tracks+1]]];
			  axial = rand[axialtotrackssmear[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial1smcsmear[]]), trial1smcsmear[]]];
p = Length[Select[Table[trial1smcsmear[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[87]= {99.502, 0.0222603}

trial2smcsmear[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks2s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks2s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks2s[[tracks+1]]];
			  axial = rand[axialtotrackssmear[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial2smcsmear[]]), trial2smcsmear[]]];
p = Length[Select[Table[trial2smcsmear[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[88]= {99.358, 0.0252563}

trial3smcsmear[] := Module[{tracks, cblo, cbmd},
		      tracks = rand[tracks3s];
		      If[tracks != -1, (
			  cblo = rand[cblototracks3s[[tracks+1]]];
			  cbmd = rand[cbmdtotracks3s[[tracks+1]]];
			  axial = rand[axialtotrackssmear[[tracks+1]]];
			  If[axial != -1, (
			      stereo = rand[stereotoaxial[[axial+1]]];
			      (axial > 2 && cblo > 0) || (stereo > 1 && (cblo > 1 || cbmd > 0)) || (axial > 0 && cbmd > 0)),
			     trial3smcsmear[]]), trial3smcsmear[]]];
p = Length[Select[Table[trial3smcsmear[], {100000}], #&]];
{N[p/100000], N[Sqrt[(p/100000)*(1 - p/100000)/100000]]} * 100

Out[89]= {99.471, 0.0229391}




























<< Graphics`Graphics`

convol0[n_, pt_] := Sum[gettrack0[n+k]*((n+k)!/k!/n!)*(1-pt)^n*(pt)^k, {k, 0, 30}];
gettrack0[n_] := If[n+1 > Length[tracks0], 0, N[tracks0[[n+1]] / (Plus @@ tracks0)]];
convol1[n_, pt_] := Sum[gettrack1[n+k]*((n+k)!/k!/n!)*(1-pt)^n*(pt)^k, {k, 0, 30}];
gettrack1[n_] := If[n+1 > Length[tracks1], 0, N[tracks1[[n+1]] / (Plus @@ tracks1)]];
convol2[n_, pt_] := Sum[gettrack2[n+k]*((n+k)!/k!/n!)*(1-pt)^n*(pt)^k, {k, 0, 30}];
gettrack2[n_] := If[n+1 > Length[tracks2], 0, N[tracks2[[n+1]] / (Plus @@ tracks2)]];

convoldiff[ca_, cb_] := Sum[(convol1[i, ca] - convol2[i, cb])^2, {i, 0, 8}];
meandiff[] := (2*a2 + 4*a4 + 6*a6 + 8*a8)/(a0+a2+a4+a6+a8) -
    (2*b2 + 4*b4 + 6*b6 + 8*b8)/(b0+b2+b4+b6+b8);
badness[] := 1000*convoldiff[ca, cb] + meandiff[];
change[x_] := Random[Real, 2];
changeany[] :=
    (Switch[Random[Integer, 11] + 1,
	    1, a0 = change[a0],
	    2, a2 = change[a2],
	    3, a4 = change[a4],
	    4, a6 = change[a6],
	    5, a8 = change[a8],
	    6, b0 = change[b0],
	    7, b2 = change[b2],
	    8, b4 = change[b4],
	    9, b6 = change[b6],
	    10, b8 = change[b8],
	    11, ca = change[ca],
	    12, cb = change[cb]];
     badness[]);

a0 = 1;
a2 = 1;
a4 = 1;
a6 = 1;
a8 = 1;
b0 = 1;
b2 = 2;
b4 = 3;
b6 = 4;
b8 = 5;
ca = 0.1;
cb = 0.2;
prev = badness[];

Do[(state = {a0, a2, a4, a6, a8, b0, b2, b4, b6, b8, ca, cb};
    cur = changeany[];
    If[cur < prev || Exp[prev - cur] > Random[Real], prev = cur,
       {a0, a2, a4, a6, a8, b0, b2, b4, b6, b8, ca, cb} = state]
   ), {100}];
tracks1 = {a0, 0, a2, 0, a4, 0, a6, 0, a8};
tracks2 = {b0, 0, b2, 0, b4, 0, b6, 0, b8};
BarChart[Table[convol1[i, ca], {i, 0, 8}],
	 Table[convol2[i, cb], {i, 0, 8}],
	 Frame -> True, Axes -> False, FrameTicks -> {{#, #-1}& /@ Range[0,9], None, None, None}];




tracks1 = {0.954029, 0, 1.03338, 0, 1.06901, 0, 0.0756369, 0, 0.00374947};
tracks2 = {1.65155, 0, 1.58424, 0, 0.257075, 0, 1.93124, 0, 0.919689};
ca = 0.586212;
cb = 0.7;
n
BarChart[Table[convol1[i, ca], {i, 0, 8}],
	 Table[convol2[i, cb], {i, 0, 8}],
	 Frame -> True, Axes -> False, FrameTicks -> {{#, #-1}& /@ Range[0,9], None, None, None}];

BarChart[Table[gettrack1[i], {i, 0, 8}],
	 Table[gettrack2[i], {i, 0, 8}],
	 Frame -> True, Axes -> False, FrameTicks -> {{#, #-1}& /@ Range[0,9], None, None, None}];



Excellent!





tracks0 = {0, 0, 0, 0, 0, 0, 0, 0, 1};
tracks2 = Table[convol0[i, 0.3], {i, 0, 8}];
tracks1 = Table[convol2[i, 0.3], {i, 0, 8}];

Display["effcheck_datavmc1.eps",
BarChart[Table[gettrack1[i], {i, 0, 7}],
	 Table[gettrack2[i], {i, 0, 7}],
	 Frame -> True, Axes -> False, FrameTicks -> {{#, #-1}& /@ Range[0,9], None, None, None}, AspectRatio -> 1/2], "EPS"];

Display["effcheck_datavmc2.eps",
BarChart[Table[convol1[i, 0.2], {i, 0, 7}],
	 Table[convol2[i, 0.44], {i, 0, 7}],
	 Frame -> True, Axes -> False, FrameTicks -> {{#, #-1}& /@ Range[0,9], None, None, None}, AspectRatio -> 1/2], "EPS"];


Even better!

