nt/chain gg ../rzn2/ntuple_gamgam.rzn
nt/chain bb ../rzn2/ntuple_bhabha.rzn

nt/chain da ../rzn2/ntuple_123817.rzn
nt/chain da ../rzn2/ntuple_125176.rzn
nt/chain da ../rzn2/ntuple_126473.rzn
nt/chain da ../rzn2/ntuple_126488.rzn
nt/chain da ../rzn2/ntuple_126835.rzn
nt/chain da ../rzn2/ntuple_129071.rzn
nt/chain da ../rzn2/ntuple_129845.rzn
nt/chain da ../rzn2/ntuple_129848.rzn
nt/chain da ../rzn2/ntuple_130427.rzn
nt/chain da ../rzn2/ntuple_121899.rzn
nt/chain da ../rzn2/ntuple_121904.rzn
nt/chain da ../rzn2/ntuple_121906.rzn
nt/chain da ../rzn2/ntuple_122080.rzn
nt/chain da ../rzn2/ntuple_122081.rzn
nt/chain da ../rzn2/ntuple_122083.rzn
nt/chain da ../rzn2/ntuple_122418.rzn
nt/chain da ../rzn2/ntuple_122429.rzn
nt/chain da ../rzn2/ntuple_122586.rzn
nt/chain da ../rzn2/ntuple_122587.rzn
nt/chain da ../rzn2/ntuple_122594.rzn
nt/chain da ../rzn2/ntuple_122800.rzn
nt/chain da ../rzn2/ntuple_122802.rzn
nt/chain da ../rzn2/ntuple_122091.rzn
nt/chain da ../rzn2/ntuple_122430.rzn

h/cr/prof 100 'trigger versus angle' 100 0.7 0.85 -100 100
nt/plot //bb/lumi2/1.l1rt%abs(tr1cos) tr1cos>-100 ! ! ! ! 100
nt/plot //bb/lumi2/1.l1el%abs(tr1cos) tr1cos>-100 ! ! ! ! 100
nt/plot //bb/lumi2/1.l1bb%abs(tr1cos) tr1cos>-100 ! ! ! ! 100

nt/plot //bb/lumi2/1.tr1cos+tr2cos 0.7<abs(tr2cos)<0.8&&abs(tr1cos+tr2cos)<0.4

 *      1     * l1tt      * 0.000000E+00 * 0.100000E+01 *
 *      2     * l1rt      * 0.000000E+00 * 0.100000E+01 *
 *      3     * l1el      * 0.000000E+00 * 0.100000E+01 *
 *      4     * l1bb      * 0.000000E+00 * 0.100000E+01 *
 *      5     * l1eb      * 0.000000E+00 * 0.100000E+01 *
 *      6     * rawtk     * 0.000000E+00 * 0.700000E+01 *
 *      7     * ntrack    * 0.000000E+00 * 0.500000E+01 *
 *      8     * ebeam     * 0.516506E+01 * 0.516506E+01 *
 *      9     * epe1      * 0.000000E+00 * 0.292406E+01 *
 *     10     * epe2      * 0.000000E+00 * 0.114566E+01 *
 *     11     * epp1      * 0.000000E+00 * 0.195140E+01 *
 *     12     * epp2      * 0.000000E+00 * 0.109212E+01 *
 *     13     * ccen      * 0.000000E+00 * 0.207473E+01 *
 *     14     * neue      * 0.000000E+00 * 0.207473E+01 *
 *     15     * chen      * 0.000000E+00 * 0.181177E+01 *
 *     16     * l4dec     * 0.000000E+00 * 0.300000E+01 *
 *     17     * sh1e      * -.100000E+04 * 0.101770E+02 *
 *     18     * sh1cos    * -.100000E+04 * 0.932248E+00 *
 *     19     * sh1phi    * -.100000E+04 * 0.314156E+01 *
 *     20     * sh1e925   * -.100000E+04 * 0.100050E+01 *
 *     21     * sh1wide   * -.100000E+04 * 0.802500E-01 *
 *     22     * sh1mat    * -.100000E+04 * 0.498620E+01 *
 *     23     * sh1ang    * -.100000E+04 * 0.333462E+00 *
 *     24     * sh2e      * -.100000E+04 * 0.591738E+01 *
 *     25     * sh2cos    * -.100000E+04 * 0.930073E+00 *
 *     26     * sh2phi    * -.100000E+04 * 0.314155E+01 *
 *     27     * sh2e925   * -.100000E+04 * 0.100050E+01 *
 *     28     * sh2wide   * -.100000E+04 * 0.101850E+00 *
 *     29     * sh2mat    * -.100000E+04 * 0.604180E+01 *
 *     30     * sh2ang    * -.100000E+04 * 0.344319E+00 *
 *     31     * sh3e      * -.100000E+04 * 0.357141E+01 *
 *     32     * sh3cos    * -.100000E+04 * 0.941234E+00 *
 *     33     * sh3phi    * -.100000E+04 * 0.314155E+01 *
 *     34     * sh3e925   * -.100000E+04 * 0.100050E+01 *
 *     35     * sh3wide   * -.100000E+04 * 0.195350E+00 *
 *     36     * sh3mat    * -.100000E+04 * 0.821045E+01 *
 *     37     * sh3ang    * -.100000E+04 * 0.344346E+00 *
 *     38     * sh4e      * -.100000E+04 * 0.250452E+01 *
 *     39     * sh4cos    * -.100000E+04 * 0.939689E+00 *
 *     40     * sh4phi    * -.100000E+04 * 0.314157E+01 *
 *     41     * sh4e925   * -.100000E+04 * 0.100050E+01 *
 *     42     * sh4wide   * -.100000E+04 * 0.197950E+00 *
 *     43     * sh4mat    * -.100000E+04 * 0.499748E+01 *
 *     44     * sh4ang    * -.100000E+04 * 0.338144E+00 *
 *     45     * m12       * -.100000E+04 * 0.118791E+02 *
 *     46     * m123      * -.100000E+04 * 0.128738E+02 *
 *     47     * m1234     * -.100000E+04 * 0.154785E+02 *
 *     48     * hits      * 0.000000E+00 * 0.248000E+03 *
 *     49     * tr1p      * -.100000E+04 * 0.610237E+01 *
 *     50     * tr1cos    * -.100000E+04 * 0.936986E+00 *
 *     51     * tr1phi    * -.100000E+04 * 0.314136E+01 *
 *     52     * tr2p      * -.100000E+04 * 0.487453E+01 *
 *     53     * tr2cos    * -.100000E+04 * 0.932994E+00 *
 *     54     * tr2phi    * -.100000E+04 * 0.314087E+01 *
 *     55     * tr3p      * -.100000E+04 * 0.265167E+01 *
 *     56     * tr3cos    * -.100000E+04 * 0.901581E+00 *
 *     57     * tr3phi    * -.100000E+04 * 0.312509E+01 *
 *     58     * tr4p      * -.100000E+04 * 0.247457E+01 *
 *     59     * tr4cos    * -.100000E+04 * 0.903323E+00 *
 *     60     * tr4phi    * -.100000E+04 * 0.313123E+01 *
 *     61     * c12r      * -.100000E+04 * 0.263272E+00 *
 *     62     * c12z      * -.100000E+04 * 0.432206E+00 *
 *     63     * c12z2     * -.100000E+04 * 0.732193E-02 *
 *     64     * c12z3     * -.100000E+04 * 0.232884E+00 *
 *     65     * c13r      * -.100000E+04 * 0.162284E+00 *
 *     66     * c13z      * -.100000E+04 * 0.255670E+00 *
 *     67     * c13z2     * -.100000E+04 * 0.295136E-02 *
 *     68     * c13z3     * -.100000E+04 * 0.166924E+00 *
 *     69     * c14r      * -.100000E+04 * 0.106619E+00 *
 *     70     * c14z      * -.100000E+04 * 0.352435E-01 *
 *     71     * c14z2     * -.100000E+04 * 0.386715E-02 *
 *     72     * c14z3     * -.100000E+04 * 0.122859E+00 *
 *     73     * c23r      * -.100000E+04 * 0.269925E+00 *
 *     74     * c23z      * -.100000E+04 * 0.291404E+00 *
 *     75     * c23z2     * -.100000E+04 * 0.122530E-01 *
 *     76     * c23z3     * -.100000E+04 * 0.945744E-01 *
 *     77     * c24r      * -.100000E+04 * 0.927445E-01 *
 *     78     * c24z      * -.100000E+04 * 0.556836E-01 *
 *     79     * c24z2     * -.100000E+04 * 0.305752E-02 *
 *     80     * c24z3     * -.100000E+04 * 0.993485E-01 *
 *     81     * c34r      * -.100000E+04 * 0.396182E+00 *
 *     82     * c34z      * -.100000E+04 * 0.380743E-01 *
 *     83     * c34z2     * -.100000E+04 * 0.401318E-02 *
 *     84     * c34z3     * -.100000E+04 * 0.133549E+00 *
 *     85     * nvxfit    * 0.000000E+00 * 0.400000E+01 *
 *     86     * v1chi     * -.100000E+04 * 0.263820E+03 *
 *     87     * v1x       * -.100000E+04 * 0.306028E+01 *
 *     88     * v1y       * -.100000E+04 * 0.691211E+00 *
 *     89     * v1z       * -.100000E+04 * 0.148337E+01 *
 *     90     * v2chi     * -.100000E+04 * 0.263820E+03 *
 *     91     * v2x       * -.100000E+04 * 0.306028E+01 *
 *     92     * v2y       * -.100000E+04 * 0.691211E+00 *
 *     93     * v2z       * -.100000E+04 * 0.148337E+01 *
 *     94     * v3chi     * -.100000E+04 * 0.723517E+00 *
 *     95     * v3x       * -.100000E+04 * 0.159478E-01 *
 *     96     * v3y       * -.100000E+04 * 0.154016E-02 *
 *     97     * v3z       * -.100000E+04 * 0.115063E+00 *
 *     98     * v4chi     * -.100000E+04 * 0.723517E+00 *
 *     99     * v4x       * -.100000E+04 * 0.159478E-01 *
 *    100     * v4y       * -.100000E+04 * 0.154016E-02 *
 *    101     * v4z       * -.100000E+04 * 0.115063E+00 *
 *    102     * pmiss     * -.100000E+04 * 0.169265E+01 *
 *    103     * d0close   * -.500183E+00 * 0.100000E+04 *
 *    104     * z0close   * -.387988E+01 * 0.100000E+04 *
 *    105     * myntk     * 0.000000E+00 * 0.500000E+01 *
 *    106     * run       * 0.121772E+06 * 0.121772E+06 *

*    if (one == showers.end()  ||  two == showers.end()  ||
*        cos(one->attributes().theta())*cos(two->attributes().theta()) > 0.)

*    if (l1trig->isBarrelBhabha()                              &&
*        l4dec->decision() > 0                                 &&
*        props->secondLargestEShower() / eBeam->value() > 0.9  &&
*        props->nbChargedTracks() == 0                         &&
*        excludeBlockA(westphi, cotT)                          &&
*        excludeBlockBC(westphi, cotT)                         &&
*        (0.05 < fabs(cotT) && fabs(cotT) < 1.38)              &&
*        safeb2b(westcotT, eastcotT)                           &&
*        ggacop(westphi, eastphi)                                ) {

* bool Relatives::excludeBlockA(double westphi, double cotTheta)
* {
*    // This will return true if you're OUTSIDE of block A
*    return !(-14.0/64.0*M_PI < westphi  &&
* 	    westphi < 9.0/64.0*M_PI    &&
* 	    fabs(cotTheta) < 0.54);
* }

* bool Relatives::excludeBlockBC(double westphi, double cotTheta)
* {
*    // This will return true if you're OUTSIDE of blocks B and C
*    return !(-53.0/64.0*M_PI < westphi  &&
* 	    westphi < -14.0/64.0*M_PI    &&
* 	    fabs(cotTheta) > 0.95);
* }

* bool Relatives::safeb2b(double cotTheta1, double cotTheta2)
* {
*    return (fabs(cotTheta1 + cotTheta2) < 0.1);
* }

* bool Relatives::ggacop(double phi1, double phi2)
* {
*    return (fabs(sin(phi1 - phi2)) < 0.04);
* }


* * This is a test case
* nt/cuts $1 (sh1e>-1000)&&(sh2e>-1000)&&(sh1cos*sh2cos<=0)&&(l1bb==1)&&(l4dec>0)&&(sh2e/ebeam>0.9)&&(ntrack==0)&&0.05<abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<1.38&&abs(sh1cos/sqrt(1-sh1cos**2)+sh2cos/sqrt(1-sh2cos**2))<0.1&&abs(sin(sh1phi-sh2phi))<0.04
* nt/cuts $2 ((sh1cos>0&&!(-14.0/64.0*3.1415926<sh1phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)).or.(sh1cos<=0&&!(-14.0/64.0*3.1415926<sh2phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)))
* nt/cuts $3 ((sh1cos>0&&!(-53.0/64.0*3.1415926<sh1phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)).or.(sh1cos<=0&&!(-53.0/64.0*3.1415926<sh2phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)))

* * h/cr/2d 100 'test' 138 0. 1.38 128 -3.1415926 3.1415926
* * h/cr/2d 101 'test' 138 0. 1.38 128 -3.1415926 3.1415926
* * h/cr/2d 102 'test' 138 0. 1.38 128 -3.1415926 3.1415926
* * nt/plot //gg/lumi2/1.((sh1cos>0)*sh1phi+(sh1cos<=0)*sh2phi)%(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2 $1 ! ! ! ! 100
* * nt/plot //gg/lumi2/1.((sh1cos>0)*sh1phi+(sh1cos<=0)*sh2phi)%(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2 $1&&$2&&$3 ! ! ! ! 101
* * div 101 100 102
* * min 102 0.
* * max 102 1.00
* * h/plot 102 box

* h/cr/1d 100 'test histogram' 138 0. 1.38
* h/cr/1d 101 'test histogram' 138 0. 1.38
* h/cr/1d 102 'test histogram' 138 0. 1.38
* nt/plot //gg/lumi2/1.abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2 $1&&$2&&$3 ! ! ! ! 100
* ve/cr tmp(138)
* * different random seed
* ve/inp tmp 0 0 0 0 0 730 702 653 612 711 719 727 644 652 756 725 705 623 704 720 729 718 692 696 727 713 726 649 726 733 757 758 623 729 761 705 800 674 725 795 717 771 658 822 789 690 796 705 708 714 708 782 776 689 905 863 919 993 854 825 914 839 886 1011 963 920 843 869 934 1021 822 849 856 840 1004 1061 895 795 830 813 926 982 1022 799 849 762 789 947 1032 952 850 824 742 804 1006 698 627 542 557 442 525 637 672 583 560 581 488 514 575 725 731 661 561 572 437 450 605 696 732 580 517 522 442 439 561 692 772 538 492 462 405 369 366 579 703 662 489 390
* * same random seed
* ve/inp tmp 0 0 0 0 0 728 703 657 612 714 725 728 645 653 762 722 701 628 702 724 727 714 692 697 727 713 724 649 729 724 759 758 629 733 758 706 802 674 730 795 710 769 656 818 783 689 795 703 705 714 707 781 777 692 905 861 924 994 855 825 920 833 890 1006 959 925 838 873 934 1019 826 853 858 841 1009 1062 897 795 839 813 930 985 1021 793 849 764 790 954 1030 953 852 826 741 805 1003 696 626 540 559 439 524 642 674 587 559 584 487 505 580 727 730 658 563 569 435 444 607 701 728 575 521 525 442 441 557 693 778 542 488 458 408 362 368 572 706 658 491 389
* h/put_vect/contents 101 tmp
* h/plot 100
* h/plot 101 's'
* div 100 101 102
* h/plot 102

* * data from a few runs
* ve/inp tmp 0. 0. 0. 0. 0. 608. 429. 492. 499. 628. 568. 470. 469. 518. 583. 523. 485. 451. 530. 543. 461. 506. 527. 554. 609. 479. 493. 513. 560. 614. 472. 504. 528. 613. 612. 522. 501. 502. 553. 568. 551. 502. 536. 579. 662. 591. 539. 497. 578. 646. 583. 555. 530. 495. 720. 761. 671. 617. 644. 632. 688. 647. 607. 660. 621. 696. 747. 784. 656. 678. 617. 639. 745. 716. 641. 642. 653. 677. 673. 709. 742. 633. 627. 620. 614. 678. 679. 611. 658. 672. 655. 735. 727. 678. 670. 466. 450. 407. 417. 431. 426. 458. 454. 418. 458. 468. 490. 454. 450. 450. 444. 423. 376. 382. 351. 360. 391. 441. 461. 447. 471. 415. 423. 422. 473. 446. 436. 403. 421. 379. 374. 422. 359. 427. 407. 404. 364. 340.
* h/put_vect/contents 101 tmp
* h/plot 101 's'

* Verily, verily, I say unto thee: these cuts exactly match the ones in Relatives.cc.

* These are for the nominal case
nt/cuts $1 (sh1e>-1000)&&(sh2e>-1000)&&(sh1cos*sh2cos<=0)&&(l1bb==1)&&(l4dec>0)&&(sh2e/ebeam>0.9)&&(ntrack==0)&&0.15<abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<1.28&&abs(sh1cos/sqrt(1-sh1cos**2)+sh2cos/sqrt(1-sh2cos**2))<0.1&&abs(sin(sh1phi-sh2phi))<0.04
nt/cuts $2 ((sh1cos>0&&!(-14.0/64.0*3.1415926<sh1phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)).or.(sh1cos<=0&&!(-14.0/64.0*3.1415926<sh2phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)))
nt/cuts $3 ((sh1cos>0&&!(-53.0/64.0*3.1415926<sh1phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)).or.(sh1cos<=0&&!(-53.0/64.0*3.1415926<sh2phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)))

* These are for the thetaup case
nt/cuts $1 (sh1e>-1000)&&(sh2e>-1000)&&(sh1cos*sh2cos<=0)&&(l1bb==1)&&(l4dec>0)&&(sh2e/ebeam>0.9)&&(ntrack==0)&&0.15<abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2+0.1<1.28&&abs(sh1cos/sqrt(1-sh1cos**2)+sh2cos/sqrt(1-sh2cos**2))<0.1&&abs(sin(sh1phi-sh2phi))<0.04
nt/cuts $2 ((sh1cos>0&&!(-14.0/64.0*3.1415926<sh1phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2+0.1<0.54)).or.(sh1cos<=0&&!(-14.0/64.0*3.1415926<sh2phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2+0.1<0.54)))
nt/cuts $3 ((sh1cos>0&&!(-53.0/64.0*3.1415926<sh1phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2+0.1>0.95)).or.(sh1cos<=0&&!(-53.0/64.0*3.1415926<sh2phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2+0.1>0.95)))

* These are for the thetadown case
nt/cuts $1 (sh1e>-1000)&&(sh2e>-1000)&&(sh1cos*sh2cos<=0)&&(l1bb==1)&&(l4dec>0)&&(sh2e/ebeam>0.9)&&(ntrack==0)&&0.15<abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2-0.1<1.28&&abs(sh1cos/sqrt(1-sh1cos**2)+sh2cos/sqrt(1-sh2cos**2))<0.1&&abs(sin(sh1phi-sh2phi))<0.04
nt/cuts $2 ((sh1cos>0&&!(-14.0/64.0*3.1415926<sh1phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2-0.1<0.54)).or.(sh1cos<=0&&!(-14.0/64.0*3.1415926<sh2phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2-0.1<0.54)))
nt/cuts $3 ((sh1cos>0&&!(-53.0/64.0*3.1415926<sh1phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2-0.1>0.95)).or.(sh1cos<=0&&!(-53.0/64.0*3.1415926<sh2phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2-0.1>0.95)))

* These are for the energyup case
nt/cuts $1 (sh1e>-1000)&&(sh2e>-1000)&&(sh1cos*sh2cos<=0)&&(l1bb==1)&&(l4dec>0)&&(sh2e/ebeam>0.95)&&(ntrack==0)&&0.15<abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<1.28&&abs(sh1cos/sqrt(1-sh1cos**2)+sh2cos/sqrt(1-sh2cos**2))<0.1&&abs(sin(sh1phi-sh2phi))<0.04
nt/cuts $2 ((sh1cos>0&&!(-14.0/64.0*3.1415926<sh1phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)).or.(sh1cos<=0&&!(-14.0/64.0*3.1415926<sh2phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)))
nt/cuts $3 ((sh1cos>0&&!(-53.0/64.0*3.1415926<sh1phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)).or.(sh1cos<=0&&!(-53.0/64.0*3.1415926<sh2phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)))













* trackless bhabha study

nt/cuts $1 (sh1e>-1000)&&(sh2e>-1000)&&(sh1cos*sh2cos<=0)&&(l1bb==1)&&(l4dec>0)&&(sh2e/ebeam>0.9)&&(ntrack==2)&&0.15<abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<1.28&&abs(sh1cos/sqrt(1-sh1cos**2)+sh2cos/sqrt(1-sh2cos**2))<0.1
nt/cuts $2 ((sh1cos>0&&!(-14.0/64.0*3.1415926<sh1phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)).or.(sh1cos<=0&&!(-14.0/64.0*3.1415926<sh2phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)))
nt/cuts $3 ((sh1cos>0&&!(-53.0/64.0*3.1415926<sh1phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)).or.(sh1cos<=0&&!(-53.0/64.0*3.1415926<sh2phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)))

opt logy
h/cr/1d 100 'sin([f]?1! - [f]?2!)' 100 -0.25 0.25
h/cr/1d 101 'sin([f]?1! - [f]?2!)' 100 -0.25 0.25
nt/plot //da/lumi2/1.sin(sh1phi-sh2phi) $1&&$2&&$3 ! ! ! 'N' 100
nt/plot //da/lumi2/1.sin(sh1phi-sh2phi) $1&&$2&&$3&&abs(sin(sh1phi-sh2phi))<0.04 ! ! ! 'N' 101
sigma surv = $HINFO(101,'ENTRIES') / $HINFO(100,'ENTRIES')
message $SIGMA(surv*100)
* 0.088% of bhabhas leak into the signal region

h/cr/1d 102 'sin([f]?1! - [f]?2!) for bhabhas (MC vs data)' 100 -0.25 0.25
nt/plot //bb/lumi2/1.sin(sh1phi-sh2phi) $SIGMA(305604.0/68045.0)*($1&&$2&&$3) ! ! ! 'N' 102
h/plot 102
h/plot 100 'se'
set ltyp 2
sigma top = $GRAFINFO('WNYMAX')
sigma bot = $GRAFINFO('WNYMIN')
dline 0.04 0.04 $SIGMA(10**bot) $SIGMA(10**top)
dline -0.04 -0.04 $SIGMA(10**bot) $SIGMA(10**top)
pict/print 'plottrig3_p2prep.eps'

nt/plot //bb/lumi2/1.sin(sh1phi-sh2phi) ! ! ! ! 'N' 103
message $hinfo(102,'entries') $hinfo(103,'entries') 
* 68045/180172 of the bhabha sample passes angular cuts
* --> represents 0.3777(18.47 +/- 0.01) nb = 6.9755 +/- 0.0038 nb

nt/cuts $1 (sh1e>-1000)&&(sh2e>-1000)&&(sh1cos*sh2cos<=0)&&(l1bb==1)&&(l4dec>0)&&(sh2e/ebeam>0.9)&&(ntrack==0)&&0.15<abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<1.28&&abs(sh1cos/sqrt(1-sh1cos**2)+sh2cos/sqrt(1-sh2cos**2))<0.1
nt/cuts $2 ((sh1cos>0&&!(-14.0/64.0*3.1415926<sh1phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)).or.(sh1cos<=0&&!(-14.0/64.0*3.1415926<sh2phi<9.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2<0.54)))
nt/cuts $3 ((sh1cos>0&&!(-53.0/64.0*3.1415926<sh1phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)).or.(sh1cos<=0&&!(-53.0/64.0*3.1415926<sh2phi<-14.0/64.0*3.1415926&&abs(sh1cos/sqrt(1-sh1cos**2)-sh2cos/sqrt(1-sh2cos**2))/2>0.95)))

nt/plot //gg/lumi2/1.sin(sh1phi-sh2phi) ($1&&$2&&$3) ! ! ! 'N' 104
nt/plot //gg/lumi2/1.sin(sh1phi-sh2phi) ! ! ! ! 'N' 105
message $hinfo(104,'entries') $hinfo(105,'entries') 
* 84722/190183 of the gamgam sample passes angular cuts
* --> represents 0.4455(1.876 +/- 0.002) nb = 0.83571 +/- 0.00089 nb

* relevant bhabha/gamgam cross-section ratio: 8.347
* 2% of bhabhas are trackless => 0.02*(0.088%)*8.347 = 0.015% of
* "gamgams" are really trackless bhabhas



