nt/chain bb ../rzn2/ntuple_bhabha.rzn
nt/chain gg ../rzn2/ntuple_gamgam.rzn

nt/chain da ../rzn2/ntuple_123817.rzn
nt/chain da ../rzn2/ntuple_125176.rzn
nt/chain da ../rzn2/ntuple_126473.rzn
nt/chain da ../rzn2/ntuple_126488.rzn
nt/chain da ../rzn2/ntuple_126835.rzn
nt/chain da ../rzn2/ntuple_129071.rzn
nt/chain da ../rzn2/ntuple_129845.rzn
nt/chain da ../rzn2/ntuple_129848.rzn
nt/chain da ../rzn2/ntuple_130427.rzn
nt/chain da ../rzn2/ntuple_121899.rzn
nt/chain da ../rzn2/ntuple_121904.rzn
nt/chain da ../rzn2/ntuple_121906.rzn
nt/chain da ../rzn2/ntuple_122080.rzn
nt/chain da ../rzn2/ntuple_122081.rzn
nt/chain da ../rzn2/ntuple_122083.rzn
nt/chain da ../rzn2/ntuple_122418.rzn
nt/chain da ../rzn2/ntuple_122429.rzn
nt/chain da ../rzn2/ntuple_122586.rzn
nt/chain da ../rzn2/ntuple_122587.rzn
nt/chain da ../rzn2/ntuple_122594.rzn
nt/chain da ../rzn2/ntuple_122800.rzn
nt/chain da ../rzn2/ntuple_122802.rzn
nt/chain da ../rzn2/ntuple_122091.rzn
nt/chain da ../rzn2/ntuple_122430.rzn

nt/chain da3 ../rzn2/ntuple_122800.rzn

 *      1     * l1tt      * 0.000000E+00 * 0.100000E+01 *
 *      2     * l1rt      * 0.000000E+00 * 0.100000E+01 *
 *      3     * l1el      * 0.000000E+00 * 0.100000E+01 *
 *      4     * l1bb      * 0.000000E+00 * 0.100000E+01 *
 *      5     * l1eb      * 0.000000E+00 * 0.100000E+01 *
 *      6     * rawtk     * 0.000000E+00 * 0.700000E+01 *
 *      7     * ntrack    * 0.000000E+00 * 0.500000E+01 *
 *      8     * ebeam     * 0.516506E+01 * 0.516506E+01 *
 *      9     * epe1      * 0.000000E+00 * 0.292406E+01 *
 *     10     * epe2      * 0.000000E+00 * 0.114566E+01 *
 *     11     * epp1      * 0.000000E+00 * 0.195140E+01 *
 *     12     * epp2      * 0.000000E+00 * 0.109212E+01 *
 *     13     * ccen      * 0.000000E+00 * 0.207473E+01 *
 *     14     * neue      * 0.000000E+00 * 0.207473E+01 *
 *     15     * chen      * 0.000000E+00 * 0.181177E+01 *
 *     16     * l4dec     * 0.000000E+00 * 0.300000E+01 *
 *     17     * sh1e      * -.100000E+04 * 0.101770E+02 *
 *     18     * sh1cos    * -.100000E+04 * 0.932248E+00 *
 *     19     * sh1phi    * -.100000E+04 * 0.314156E+01 *
 *     20     * sh1e925   * -.100000E+04 * 0.100050E+01 *
 *     21     * sh1wide   * -.100000E+04 * 0.802500E-01 *
 *     22     * sh1mat    * -.100000E+04 * 0.498620E+01 *
 *     23     * sh1ang    * -.100000E+04 * 0.333462E+00 *
 *     24     * sh2e      * -.100000E+04 * 0.591738E+01 *
 *     25     * sh2cos    * -.100000E+04 * 0.930073E+00 *
 *     26     * sh2phi    * -.100000E+04 * 0.314155E+01 *
 *     27     * sh2e925   * -.100000E+04 * 0.100050E+01 *
 *     28     * sh2wide   * -.100000E+04 * 0.101850E+00 *
 *     29     * sh2mat    * -.100000E+04 * 0.604180E+01 *
 *     30     * sh2ang    * -.100000E+04 * 0.344319E+00 *
 *     31     * sh3e      * -.100000E+04 * 0.357141E+01 *
 *     32     * sh3cos    * -.100000E+04 * 0.941234E+00 *
 *     33     * sh3phi    * -.100000E+04 * 0.314155E+01 *
 *     34     * sh3e925   * -.100000E+04 * 0.100050E+01 *
 *     35     * sh3wide   * -.100000E+04 * 0.195350E+00 *
 *     36     * sh3mat    * -.100000E+04 * 0.821045E+01 *
 *     37     * sh3ang    * -.100000E+04 * 0.344346E+00 *
 *     38     * sh4e      * -.100000E+04 * 0.250452E+01 *
 *     39     * sh4cos    * -.100000E+04 * 0.939689E+00 *
 *     40     * sh4phi    * -.100000E+04 * 0.314157E+01 *
 *     41     * sh4e925   * -.100000E+04 * 0.100050E+01 *
 *     42     * sh4wide   * -.100000E+04 * 0.197950E+00 *
 *     43     * sh4mat    * -.100000E+04 * 0.499748E+01 *
 *     44     * sh4ang    * -.100000E+04 * 0.338144E+00 *
 *     45     * m12       * -.100000E+04 * 0.118791E+02 *
 *     46     * m123      * -.100000E+04 * 0.128738E+02 *
 *     47     * m1234     * -.100000E+04 * 0.154785E+02 *
 *     48     * hits      * 0.000000E+00 * 0.248000E+03 *
 *     49     * tr1p      * -.100000E+04 * 0.610237E+01 *
 *     50     * tr1cos    * -.100000E+04 * 0.936986E+00 *
 *     51     * tr1phi    * -.100000E+04 * 0.314136E+01 *
 *     52     * tr2p      * -.100000E+04 * 0.487453E+01 *
 *     53     * tr2cos    * -.100000E+04 * 0.932994E+00 *
 *     54     * tr2phi    * -.100000E+04 * 0.314087E+01 *
 *     55     * tr3p      * -.100000E+04 * 0.265167E+01 *
 *     56     * tr3cos    * -.100000E+04 * 0.901581E+00 *
 *     57     * tr3phi    * -.100000E+04 * 0.312509E+01 *
 *     58     * tr4p      * -.100000E+04 * 0.247457E+01 *
 *     59     * tr4cos    * -.100000E+04 * 0.903323E+00 *
 *     60     * tr4phi    * -.100000E+04 * 0.313123E+01 *
 *     61     * c12r      * -.100000E+04 * 0.263272E+00 *
 *     62     * c12z      * -.100000E+04 * 0.432206E+00 *
 *     63     * c12z2     * -.100000E+04 * 0.732193E-02 *
 *     64     * c12z3     * -.100000E+04 * 0.232884E+00 *
 *     65     * c13r      * -.100000E+04 * 0.162284E+00 *
 *     66     * c13z      * -.100000E+04 * 0.255670E+00 *
 *     67     * c13z2     * -.100000E+04 * 0.295136E-02 *
 *     68     * c13z3     * -.100000E+04 * 0.166924E+00 *
 *     69     * c14r      * -.100000E+04 * 0.106619E+00 *
 *     70     * c14z      * -.100000E+04 * 0.352435E-01 *
 *     71     * c14z2     * -.100000E+04 * 0.386715E-02 *
 *     72     * c14z3     * -.100000E+04 * 0.122859E+00 *
 *     73     * c23r      * -.100000E+04 * 0.269925E+00 *
 *     74     * c23z      * -.100000E+04 * 0.291404E+00 *
 *     75     * c23z2     * -.100000E+04 * 0.122530E-01 *
 *     76     * c23z3     * -.100000E+04 * 0.945744E-01 *
 *     77     * c24r      * -.100000E+04 * 0.927445E-01 *
 *     78     * c24z      * -.100000E+04 * 0.556836E-01 *
 *     79     * c24z2     * -.100000E+04 * 0.305752E-02 *
 *     80     * c24z3     * -.100000E+04 * 0.993485E-01 *
 *     81     * c34r      * -.100000E+04 * 0.396182E+00 *
 *     82     * c34z      * -.100000E+04 * 0.380743E-01 *
 *     83     * c34z2     * -.100000E+04 * 0.401318E-02 *
 *     84     * c34z3     * -.100000E+04 * 0.133549E+00 *
 *     85     * nvxfit    * 0.000000E+00 * 0.400000E+01 *
 *     86     * v1chi     * -.100000E+04 * 0.263820E+03 *
 *     87     * v1x       * -.100000E+04 * 0.306028E+01 *
 *     88     * v1y       * -.100000E+04 * 0.691211E+00 *
 *     89     * v1z       * -.100000E+04 * 0.148337E+01 *
 *     90     * v2chi     * -.100000E+04 * 0.263820E+03 *
 *     91     * v2x       * -.100000E+04 * 0.306028E+01 *
 *     92     * v2y       * -.100000E+04 * 0.691211E+00 *
 *     93     * v2z       * -.100000E+04 * 0.148337E+01 *
 *     94     * v3chi     * -.100000E+04 * 0.723517E+00 *
 *     95     * v3x       * -.100000E+04 * 0.159478E-01 *
 *     96     * v3y       * -.100000E+04 * 0.154016E-02 *
 *     97     * v3z       * -.100000E+04 * 0.115063E+00 *
 *     98     * v4chi     * -.100000E+04 * 0.723517E+00 *
 *     99     * v4x       * -.100000E+04 * 0.159478E-01 *
 *    100     * v4y       * -.100000E+04 * 0.154016E-02 *
 *    101     * v4z       * -.100000E+04 * 0.115063E+00 *
 *    102     * pmiss     * -.100000E+04 * 0.169265E+01 *
 *    103     * d0close   * -.500183E+00 * 0.100000E+04 *
 *    104     * z0close   * -.387988E+01 * 0.100000E+04 *
 *    105     * myntk     * 0.000000E+00 * 0.500000E+01 *
 *    106     * run       * 0.121772E+06 * 0.121772E+06 *

* gamma-gamma cuts
nt/cuts $1 (l1bb==1&&l4dec>0)
nt/cuts $2 (epe2>0.4)
nt/cuts $3 (ntrack==0)
nt/cuts $4 (abs(sh1cos)<0.75&&abs(sh2cos)<0.75)
nt/cuts $5 (abs(sin(sh1phi-sh2phi))<0.04)

* for trackless bhabhas, replace $5 with $6
nt/cuts $6 (0.04<abs(sin(sh1phi-sh2phi))<0.25)

* bhabha cuts
nt/cuts $11 (l1el==1&&l4dec>0)
nt/cuts $12 (ntrack==2)
nt/cuts $13 (epe2>0.4)
nt/cuts $14 (epp2>0.75)
nt/cuts $15 (abs(tr1cos)<0.75&&abs(tr2cos)<0.75)
nt/cuts $16 (abs(tr1cos+tr2cos)<0.025)
nt/cuts $17 (abs(sin(tr1phi-tr2phi))<0.3)

zone 1 2

h/cr/1d 100 'biggest shower energy (gg solid, bb dashed, MC)' 50 0.9 1.1
h/cr/1d 101 'biggest shower energy (gg solid, bb dashed, MC)' 50 0.9 1.1
nt/plot //gg/lumi2/1.sh1e/ebeam $2&&$3&&$4&&$5&&0.9<sh1e/ebeam<1.1 ! ! ! 'N' 100
nt/plot //bb/lumi2/1.sh1e/ebeam $12&&$13&&$14&&$15&&$16&&$17&&0.9<sh1e/ebeam<1.1 ! ! ! 'N' 101
normalize 100
normalize 101
opt logy
h/plot 100
h/plot 101 's'

h/cr/1d 100 'biggest shower energy (gg solid, bb dashed, data)' 50 0.9 1.1
h/cr/1d 101 'biggest shower energy (gg solid, bb dashed, data)' 50 0.9 1.1
nt/plot //da/lumi2/1.sh1e/ebeam $1&&$2&&$3&&$4&&$5&&0.9<sh1e/ebeam<1.1 ! ! ! 'N' 100
nt/plot //da/lumi2/1.sh1e/ebeam $11&&$12&&$13&&$14&&$15&&$16&&$17&&0.9<sh1e/ebeam<1.1 ! ! ! 'N' 101
normalize 100
normalize 101
opt logy
h/plot 100
h/plot 101 's'

pict/print 'some2.ps'

zone 1 2

h/cr/1d 100 'second-biggest shower energy (gg solid, bb dashed, MC)' 50 0.9 1.1
h/cr/1d 101 'second-biggest shower energy (gg solid, bb dashed, MC)' 50 0.9 1.1
nt/plot //gg/lumi2/1.sh2e/ebeam $2&&$3&&$4&&$5&&0.9<sh2e/ebeam<1.1 ! ! ! 'N' 100
nt/plot //bb/lumi2/1.sh2e/ebeam $12&&$13&&$14&&$15&&$16&&$17&&0.9<sh2e/ebeam<1.1 ! ! ! 'N' 101
normalize 100
normalize 101
opt logy
h/plot 100
h/plot 101 's'

h/cr/1d 100 'second-biggest shower energy (gg solid, bb dashed, data)' 50 0.9 1.1
h/cr/1d 101 'second-biggest shower energy (gg solid, bb dashed, data)' 50 0.9 1.1
nt/plot //da/lumi2/1.sh2e/ebeam $1&&$2&&$3&&$4&&$5&&0.9<sh2e/ebeam<1.1 ! ! ! 'N' 100
nt/plot //da/lumi2/1.sh2e/ebeam $11&&$12&&$13&&$14&&$15&&$16&&$17&&0.9<sh2e/ebeam<1.1 ! ! ! 'N' 101
normalize 100
normalize 101
opt logy
h/plot 100
h/plot 101 's'

pict/print 'some3.ps'



fortran/file 65 'some.ps'
graphics/metafile 65 -111
igset mtype 1

zone 1 2

h/cr/1d 100 'Width of gamgam (solid), bhabha (dashed) showers (MC)' 100 0 0.10
h/cr/1d 101 'Width of gamgam (solid), bhabha (dashed) showers (MC)' 100 0 0.10
nt/plot //gg/lumi2/1.(sh1wide+sh2wide)/2 $2&&$3&&$4&&$5 ! ! ! 'N' 100
nt/plot //bb/lumi2/1.(sh1wide+sh2wide)/2 $12&&$13&&$14&&$15&&$16&&$17 ! ! ! 'N' 101
normalize 100
normalize 101
opt sta
set stat 0001100
h/plot 100
h/plot 101 's'
sigma ratio = $HINFO(101,'MEAN')/$HINFO(100,'MEAN')
text 0.08 0.05 ratio=$SIGMA(ratio) ! ! 'c'

h/cr/1d 110 'Width of gamgam (solid), bhabha (dashed) showers (data)' 100 0 0.10
h/cr/1d 111 'Width of gamgam (solid), bhabha (dashed) showers (data)' 100 0 0.10
nt/plot //da/lumi2/1.(sh1wide+sh2wide)/2 $1&&$2&&$3&&$4&&$5 ! ! ! 'N' 110
nt/plot //da/lumi2/1.(sh1wide+sh2wide)/2 $11&&$12&&$13&&$14&&$15&&$16&&$17 ! ! ! 'N' 111
normalize 110
normalize 111
opt sta
set stat 0001100
h/plot 110
h/plot 111 's'
sigma ratio = $HINFO(111,'MEAN')/$HINFO(110,'MEAN')
text 0.08 0.05 ratio=$SIGMA(ratio) ! ! 'c'

zone 1 2

h/cr/1d 400 'shower [D]cos([Q]) gamgam (solid), bhabha (dashed) showers (MC)' 100 -0.1 0.1
h/cr/1d 401 'shower [D]cos([Q]) gamgam (solid), bhabha (dashed) showers (MC)' 100 -0.1 0.1
nt/plot //gg/lumi2/1.(sh1cos+sh2cos) $2&&$3&&$4&&$5 ! ! ! 'N' 400
nt/plot //bb/lumi2/1.(sh1cos+sh2cos) $12&&$13&&$14&&$15&&$16&&$17 ! ! ! 'N' 401
normalize 400
normalize 401
opt sta
set stat 0001100
h/plot 400
h/plot 401 's'
sigma ratio = $HINFO(401,'RMS')/$HINFO(400,'RMS')
text 0.05 0.04 ratio=$SIGMA(ratio) ! ! 'c'

h/cr/1d 410 'shower [D]cos([Q]) gamgam (solid), bhabha (dashed) showers (data)' 100 -0.1 0.1
h/cr/1d 411 'shower [D]cos([Q]) gamgam (solid), bhabha (dashed) showers (data)' 100 -0.1 0.1
nt/plot //da/lumi2/1.(sh1cos+sh2cos) $1&&$2&&$3&&$4&&$5 ! ! ! 'N' 410
nt/plot //da/lumi2/1.(sh1cos+sh2cos) $11&&$12&&$13&&$14&&$15&&$16&&$17 ! ! ! 'N' 411
normalize 410
normalize 411
opt sta
set stat 0001100
h/plot 410
h/plot 411 's'
sigma ratio = $HINFO(411,'RMS')/$HINFO(410,'RMS')
text 0.05 0.04 ratio=$SIGMA(ratio) ! ! 'c'

zone 1 2

opt sta
set stat 0001100
h/cr/1d 200 'cos([Q]) from showers minus from tracks (bhabha, MC)' 100 -0.05 0.05
nt/plot //bb/lumi2/1.(sh1cos+sh2cos)/2-(tr1cos+tr2cos)/2 $12&&$13&&$14&&$15&&$16&&$17 ! ! ! ! 200

opt sta
set stat 0001100
h/cr/1d 210 'cos([Q]) from showers minus from tracks (bhabha, data)' 100 -0.05 0.05
nt/plot //da/lumi2/1.(sh1cos+sh2cos)/2-(tr1cos+tr2cos)/2 $11&&$12&&$13&&$14&&$15&&$16&&$17 ! ! ! ! 210

zone 1 1
opt nsta

h/cr/2d 300 'BarrelBhabha efficiency SHOWER phi vs SHOWER theta (west)' 100 0 1 128 -3.1415926 3.1415926
h/cr/2d 301 'BarrelBhabha efficiency SHOWER phi vs SHOWER theta (west)' 100 0 1 128 -3.1415926 3.1415926
h/cr/2d 302 'BarrelBhabha efficiency SHOWER phi vs SHOWER theta (west)' 100 0 1 128 -3.1415926 3.1415926
nt/project 300 //da/lumi2/1.sh1phi%sh1cos (sh1cos>0)&&$11&&$12&&$13&&$14&&$16&&$17
nt/project 300 //da/lumi2/1.sh2phi%sh2cos (sh1cos<0)&&$11&&$12&&$13&&$14&&$16&&$17
nt/project 301 //da/lumi2/1.sh1phi%sh1cos (sh1cos>0)&&$11&&$12&&$13&&$14&&$16&&$17&&l1bb==1
nt/project 301 //da/lumi2/1.sh2phi%sh2cos (sh1cos<0)&&$11&&$12&&$13&&$14&&$16&&$17&&l1bb==1
div 301 300 302
min 302 0.75
max 302 1.00
h/plot 302 'box'

h/cr/2d 300 'BarrelBhabha efficiency SHOWER phi vs SHOWER theta (east)' 100 -1 0 128 -3.1415926 3.1415926
h/cr/2d 301 'BarrelBhabha efficiency SHOWER phi vs SHOWER theta (east)' 100 -1 0 128 -3.1415926 3.1415926
h/cr/2d 302 'BarrelBhabha efficiency SHOWER phi vs SHOWER theta (east)' 100 -1 0 128 -3.1415926 3.1415926
nt/project 300 //da/lumi2/1.sh1phi%sh1cos (sh1cos<0)&&$11&&$12&&$13&&$14&&$16&&$17
nt/project 300 //da/lumi2/1.sh2phi%sh2cos (sh1cos>0)&&$11&&$12&&$13&&$14&&$16&&$17
nt/project 301 //da/lumi2/1.sh1phi%sh1cos (sh1cos<0)&&$11&&$12&&$13&&$14&&$16&&$17&&l1bb==1
nt/project 301 //da/lumi2/1.sh2phi%sh2cos (sh1cos>0)&&$11&&$12&&$13&&$14&&$16&&$17&&l1bb==1
div 301 300 302
min 302 0.75
max 302 1.00
h/plot 302 'box'

close 65

pict/print 'some1.ps'

* h/cr/1d 99 'plus or minus' 2 -50 50
* nt/plot //da/lumi2/1.tr1p*tr2p $11&&$12&&$13&&$14&&$15&&$16&&$17 ! ! ! ! 99
* opt logy
* h/plot 99
* ve/cr tmp(2)
* h/get_vect/contents 99 tmp
* message $SIGMA(tmp(1)) $SIGMA(tmp(2))
* opt liny
* --> 0.002%