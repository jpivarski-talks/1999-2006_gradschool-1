##################################################################
# file: $C3_SCRIPTS/pass2/pass2_pds_to_db.tcl
#
# purpose: write the pds files generated by pass2 to the database
#
# usage:
# 
#  inside Suez issue the command 
#    pass2_pds_to_db <runNumber> <pathToPDSs> <federation> <basePath>
#   where
#       <runNumber>  is the run number to process
#       <pathToPDSs> is the directory holding the PDS files
#       <federation> is the federation to read from/write to
#       <basePath>   is the <ams server machine>:<base path for db files>
#                      that specifies exactly where to write to
#
#  NOTE: This scripts assumes the pds files have to following naming
#         schema
#           run<runNumber>_<fileNumber>.pds
#          where <fileNumber> starts at 1
#
##################################################################

tcl_proc pass2_pds_to_db {runNumber pathToPDSs federation basePath} {
    #setup the database for reading and writing
    module sel DBModule
    database in $federation beginrun startrun event
    database out $federation beginrun startrun event endrun
    database run_range $runNumber
    database read_collection rawdata
    database write_collection pass2

    #tell db exactly where to write to
    param DBModule configmenu basePathParm $basePath

    #bring in the producers used by pass2 in order to get the storage
    # helpers
    run_file $env(C3_SCRIPTS)/pass2/producers_pass2.tcl
    #need the Level4Decision and Level3TagWord
    prod sel Level4Proc
    #these are set in master_pass2_*.tcl script
    prod sel DBEventHeaderProd

    # now deselect the producers
    set prodList [split [ string trim [prod lss] ] "\n" ]
    foreach prodInfo $prodList {
	# the format is " prodName : prodFile "
	set prodName [ string trim [ lindex [ split $prodInfo ":"] 0 ] ]
	desel $prodName
    }

    #tell database what to save
    run_file $env(C3_SCRIPTS)/pass2_controlWriteout_pass2.tcl

    source_format sel PDSSourceFormat
    set fileNumber 1
    while [file exists "$pathToPDSs/run${runNumber}_${fileNumber}.pds"] {
	file in "$pathToPDSs/run${runNumber}_${fileNumber}.pds" beginrun startrun event endrun
	source act run${runNumber}_${fileNumber} beginrun startrun event endrun
	go
	incr fileNumber
    }
}
