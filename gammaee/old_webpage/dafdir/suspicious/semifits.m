$DisplayFunction = Module[{System`Private`file = OpenTemporary[]}, 
			  Display[{$Display, System`Private`file}, #1]; System`Private`file = 
			  Close[System`Private`file]; System`Private`$DisplayLinkCommands[
			      System`Private`file, $DisplayTitle]; #1] &;

WeightedMean[ points:{ { ( _Integer | _Real ), ( _Integer | _Real ) } .. } ] := Module[
    { xoversig2sum, oneoversig2sum },
    xoversig2sum = Plus @@ ( ( #[[1]] / #[[2]]^2 )& /@ points );
    oneoversig2sum = Plus @@ ( ( 1 / #[[2]]^2 )& /@ points );
    If[ oneoversig2sum == 0, { 0, 0 },
	{ xoversig2sum / oneoversig2sum, Sqrt[ 1 / oneoversig2sum ] } ] ];

<< "../tools/kf_fits.m"

firstscan = { { 126422, 2 * 5.00866, 4.43, 0.26 },
	      { 126424, 2 * 5.00861, 4.18, 0.26 },
	      { 126428, 2 * 5.01559, 5.67, 0.36 },
	      { 126429, 2 * 5.01062, 7.43, 0.09 },
	      { 126431, 2 * 5.01065, 7.43, 0.09 },
	      { 126432, 2 * 5.01061, 7.60, 0.09 },
	      { 126433, 2 * 5.01063, 7.57, 0.09 },
	      { 126434, 2 * 5.01063, 7.39, 0.09 },
	      { 126435, 2 * 5.02665, 3.63, 0.05 },
	      { 126436, 2 * 5.00858, 4.44, 0.06 },
	      { 126449, 2 * 5.01534, 6.22, 0.10 },
	      { 126451, 2 * 5.01535, 6.25, 0.14 },
	      { 126453, 2 * 5.01538, 6.44, 0.19 },
	      { 126454, 2 * 5.02062, 3.79, 0.08 },
	      { 126457, 2 * 5.00653, 3.15, 0.24 },
	      { 126458, 2 * 5.00656, 3.85, 0.18 },
	      { 126460, 2 * 5.00655, 3.34, 0.07 },
	      { 126461, 2 * 5.01756, 4.19, 0.06 },
	      { 126462, 2 * 5.01067, 7.69, 0.17 },
	      { 126464, 2 * 5.01071, 7.69, 0.11 },
	      { 126465, 2 * 5.01063, 7.58, 0.10 },
	      { 126467, 2 * 5.01065, 7.51, 0.13 },
	      { 126469, 2 * 5.01264, 9.74, 0.12 } };

firstcont = { { 126252, 2 * 5.00163, 3.16, 0.07 },
	      { 126253, 2 * 5.00164, 3.19, 0.10 },
	      { 126254, 2 * 5.00156, 3.30, 0.08 },
	      { 126255, 2 * 5.00156, 3.41, 0.09 },
	      { 126256, 2 * 5.00156, 3.22, 0.08 },
	      { 126257, 2 * 5.00162, 3.23, 0.06 },
	      { 126258, 2 * 5.00162, 3.36, 0.06 },
	      { 126259, 2 * 5.00162, 3.27, 0.09 },
	      { 126260, 2 * 5.00163, 3.33, 0.06 },
	      { 126262, 2 * 5.00157, 3.37, 0.09 },
	      { 126263, 2 * 5.00109, 3.47, 0.13 },
	      { 126265, 2 * 5.00158, 3.27, 0.05 },
	      { 126266, 2 * 5.00160, 3.31, 0.04 },
	      { 126267, 2 * 5.00163, 3.63, 0.18 },
	      { 126268, 2 * 5.00160, 3.24, 0.05 },
	      { 126273, 2 * 5.00262, 3.14, 0.09 },
	      { 126274, 2 * 5.00352, 3.32, 0.28 },
	      { 126649, 2 * 4.99860, 3.45, 0.15 },
	      { 126650, 2 * 4.99855, 3.07, 0.20 },
	      { 126651, 2 * 4.99860, 3.34, 0.15 },
	      { 126652, 2 * 4.99863, 3.41, 0.06 },
	      { 126653, 2 * 4.99856, 3.33, 0.05 },
	      { 126656, 2 * 4.99864, 3.33, 0.05 },
	      { 126657, 2 * 4.99862, 3.25, 0.05 },
	      { 126658, 2 * 4.99863, 3.23, 0.05 },
	      { 126662, 2 * 4.99862, 3.29, 0.06 },
	      { 126664, 2 * 4.99861, 3.41, 0.05 },
	      { 126665, 2 * 4.99853, 3.29, 0.05 },
	      { 126666, 2 * 4.99864, 3.33, 0.05 },
	      { 126667, 2 * 4.99859, 3.35, 0.05 },
	      { 126668, 2 * 4.99856, 3.28, 0.05 },
	      { 126669, 2 * 4.99860, 3.41, 0.05 },
	      { 126670, 2 * 4.99867, 3.34, 0.05 },
	      { 126673, 2 * 4.99862, 3.28, 0.06 } };

firstpeak = { { 126496, 2 * 5.01258, 9.67, 0.18 },
	      { 126499, 2 * 5.01261, 9.50, 0.28 },
	      { 126500, 2 * 5.01261, 10.04, 0.48 },
	      { 126503, 2 * 5.01271, 10.03, 0.22 },
	      { 126505, 2 * 5.01255, 9.44, 0.12 },
	      { 126506, 2 * 5.01256, 9.77, 0.15 },
	      { 126507, 2 * 5.01265, 9.53, 0.15 },
	      { 126508, 2 * 5.01266, 9.53, 0.09 },
	      { 126509, 2 * 5.01274, 9.58, 0.10 },
	      { 126510, 2 * 5.01275, 9.59, 0.09 },
	      { 126511, 2 * 5.01272, 9.59, 0.17 },
	      { 126513, 2 * 5.01275, 9.44, 0.16 },
	      { 126514, 2 * 5.01280, 9.36, 0.09 },
	      { 126520, 2 * 5.01285, 9.78, 0.20 },
	      { 126521, 2 * 5.01285, 9.67, 0.22 },
	      { 126522, 2 * 5.01286, 9.39, 0.09 },
	      { 126523, 2 * 5.01285, 9.21, 0.09 },
	      { 126525, 2 * 5.01280, 9.27, 0.53 },
	      { 126527, 2 * 5.01283, 9.50, 0.12 },
	      { 126528, 2 * 5.01280, 9.92, 0.25 },
	      { 126531, 2 * 5.01283, 9.36, 0.26 },
	      { 126532, 2 * 5.01285, 9.31, 0.09 },
	      { 126535, 2 * 5.01289, 9.89, 0.27 },
	      { 126536, 2 * 5.01291, 9.24, 0.09 },
	      { 126538, 2 * 5.01289, 9.29, 0.09 },
	      { 126539, 2 * 5.01287, 9.33, 0.08 },
	      { 126540, 2 * 5.01286, 9.41, 0.08 },
	      { 126541, 2 * 5.01286, 9.40, 0.09 },
	      { 126542, 2 * 5.01286, 9.49, 0.17 },
	      { 126543, 2 * 5.01286, 9.26, 0.10 },
	      { 126546, 2 * 5.01286, 9.29, 0.24 },
	      { 126552, 2 * 5.01286, 9.46, 0.09 },
	      { 126554, 2 * 5.01288, 9.50, 0.08 },
	      { 126555, 2 * 5.01288, 9.40, 0.08 },
	      { 126556, 2 * 5.01283, 9.62, 0.08 },
	      { 126557, 2 * 5.01283, 9.46, 0.08 },
	      { 126559, 2 * 5.01281, 9.51, 0.09 },
	      { 126562, 2 * 5.01289, 9.36, 0.09 },
	      { 126563, 2 * 5.01290, 9.48, 0.08 },
	      { 126564, 2 * 5.01291, 9.66, 0.12 } };

secondscan = { { 126776, 2 * 5.01066, 7.75, 0.09 },
	       { 126777, 2 * 5.01063, 7.76, 0.09 },
	       { 126778, 2 * 5.01063, 7.56, 0.09 },
	       { 126779, 2 * 5.01061, 7.78, 0.09 },
	       { 126780, 2 * 5.02662, 3.66, 0.06 },
	       { 126782, 2 * 5.00871, 4.64, 0.07 },
	       { 126783, 2 * 5.01547, 6.12, 0.08 },
	       { 126814, 2 * 5.01548, 6.07, 0.09 },
	       { 126815, 2 * 5.02068, 3.88, 0.06 },
	       { 126817, 2 * 5.00676, 3.46, 0.06 },
	       { 126821, 2 * 5.01768, 4.20, 0.08 },
	       { 126823, 2 * 5.01073, 7.78, 0.09 },
	       { 126824, 2 * 5.01071, 7.85, 0.09 },
	       { 126825, 2 * 5.01074, 7.79, 0.09 } };

secondcont = { { 126832, 2 * 4.99876, 3.32, 0.05 },
	       { 126834, 2 * 4.99878, 3.33, 0.05 },
	       { 126835, 2 * 4.99878, 3.25, 0.05 },
	       { 126836, 2 * 4.99881, 3.23, 0.05 },
	       { 126837, 2 * 4.99883, 3.32, 0.05 },
	       { 126838, 2 * 4.99886, 3.40, 0.08 },
	       { 126839, 2 * 4.99885, 3.32, 0.05 },
	       { 126842, 2 * 4.99889, 3.33, 0.05 },
	       { 126845, 2 * 4.99886, 3.36, 0.06 },
	       { 126846, 2 * 4.99889, 3.33, 0.05 },
	       { 126847, 2 * 4.99883, 3.33, 0.05 },
	       { 126851, 2 * 4.99883, 3.34, 0.06 },
	       { 126853, 2 * 4.99880, 3.28, 0.05 },
	       { 126854, 2 * 4.99883, 3.30, 0.05 },
	       { 126855, 2 * 4.99884, 3.35, 0.05 },
	       { 126856, 2 * 4.99884, 3.39, 0.05 } };

secondpeak = { { 126831, 2 * 5.01264, 9.50, 0.15 },
	       { 126858, 2 * 5.01259, 9.64, 0.09 },
	       { 126859, 2 * 5.01266, 9.53, 0.09 },
	       { 126862, 2 * 5.01266, 9.17, 0.11 },
	       { 126866, 2 * 5.01270, 9.73, 0.11 },
	       { 126868, 2 * 5.01267, 9.41, 0.09 },
	       { 126869, 2 * 5.01267, 9.40, 0.09 },
	       { 126870, 2 * 5.01266, 9.47, 0.09 },
	       { 126871, 2 * 5.01265, 9.32, 0.09 },
	       { 126874, 2 * 5.01268, 9.51, 0.10 },
	       { 126875, 2 * 5.01272, 9.34, 0.12 },
	       { 126877, 2 * 5.01269, 9.48, 0.18 },
	       { 126878, 2 * 5.01269, 9.41, 0.09 },
	       { 126879, 2 * 5.01273, 9.42, 0.13 },
	       { 126880, 2 * 5.01274, 9.27, 0.17 },
	       { 126881, 2 * 5.01271, 9.43, 0.09 },
	       { 126882, 2 * 5.01271, 9.50, 0.09 },
	       { 126883, 2 * 5.01274, 9.40, 0.09 },
	       { 126890, 2 * 5.01277, 9.36, 0.10 },
	       { 126892, 2 * 5.01290, 9.36, 0.09 },
	       { 126893, 2 * 5.01298, 9.46, 0.11 },
	       { 126894, 2 * 5.01300, 9.18, 0.19 },
	       { 126895, 2 * 5.01303, 9.33, 0.09 },
	       { 126906, 2 * 5.01266, 9.72, 0.34 },
	       { 126907, 2 * 5.01269, 9.03, 0.19 },
	       { 126909, 2 * 5.01261, 9.58, 0.09 },
	       { 126911, 2 * 5.01257, 9.44, 0.09 },
	       { 126912, 2 * 5.01255, 9.50, 0.11 },
	       { 126913, 2 * 5.01258, 9.32, 0.09 },
	       { 126914, 2 * 5.01260, 9.49, 0.08 },
	       { 126915, 2 * 5.01259, 9.37, 0.08 } };

feb20scan = { { 124080, 2 * 4.72846, 13.97, 0.16 },
	      { 124081, 2 * 4.73792, 4.73, 0.08 },
	      { 124084, 2 * 4.72597, 4.90, 0.09 },
	      { 124085, 2 * 4.73585, 5.51, 0.09 },
	      { 124086, 2 * 4.72684, 6.96, 0.11 },
	      { 124087, 2 * 4.73391, 8.08, 0.12 },
	      { 124089, 2 * 4.73190, 15.83, 0.25 },
	      { 124091, 2 * 4.72830, 13.12, 0.15 },
	      { 124102, 2 * 4.72830, 13.10, 0.10 },
	      { 124103, 2 * 4.73791, 4.93, 0.10 },
	      { 124106, 2 * 4.73600, 5.29, 0.11 },
	      { 124107, 2 * 4.72680, 6.99, 0.14 },
	      { 124109, 2 * 4.73390, 8.30, 0.15 },
	      { 124110, 2 * 4.73184, 16.31, 0.24 },
	      { 124111, 2 * 4.72842, 13.81, 0.17 },
	      { 124112, 2 * 4.73023, 19.83, 0.23 } };

feb20cont = { { 124113, 2 * 4.71668, 3.58, 0.05 },
	      { 124114, 2 * 4.71671, 3.60, 0.05 },
	      { 124115, 2 * 4.71671, 3.61, 0.05 },
	      { 124117, 2 * 4.71674, 3.61, 0.10 },
	      { 124118, 2 * 4.71668, 3.91, 0.25 },
	      { 124119, 2 * 4.71671, 3.74, 0.14 },
	      { 124121, 2 * 4.71671, 3.57, 0.07 },
	      { 124122, 2 * 4.71671, 3.45, 0.16 },
	      { 124123, 2 * 4.71671, 3.62, 0.05 },
	      { 124125, 2 * 4.71668, 3.65, 0.05 },
	      { 124126, 2 * 4.71671, 3.56, 0.05 },
	      { 124127, 2 * 4.71671, 3.57, 0.05 },
	      { 124128, 2 * 4.71671, 3.58, 0.05 },
	      { 124129, 2 * 4.71671, 3.57, 0.05 },
	      { 124132, 2 * 4.71671, 3.68, 0.07 },
	      { 124134, 2 * 4.71671, 3.53, 0.07 },
	      { 124137, 2 * 4.71674, 3.59, 0.05 },
	      { 124138, 2 * 4.71674, 3.63, 0.05 },
	      { 124139, 2 * 4.71674, 3.62, 0.05 },
	      { 124140, 2 * 4.71674, 3.55, 0.05 },
	      { 124141, 2 * 4.71674, 3.48, 0.05 } };

feb20peak = { { 124092, 2 * 4.73028, 19.58, 0.27 },
	      { 124142, 2 * 4.73021, 19.25, 0.36 },
	      { 124144, 2 * 4.73023, 20.01, 0.17 },
	      { 124146, 2 * 4.73029, 20.21, 0.21 },
	      { 124149, 2 * 4.73027, 19.58, 0.23 },
	      { 124150, 2 * 4.73029, 20.19, 0.17 },
	      { 124152, 2 * 4.73029, 19.93, 0.16 },
	      { 124153, 2 * 4.73033, 19.60, 0.16 },
	      { 124154, 2 * 4.73032, 19.76, 0.16 },
	      { 124155, 2 * 4.73032, 19.56, 0.29 },
	      { 124156, 2 * 4.73035, 19.87, 0.16 },
	      { 124158, 2 * 4.73032, 19.45, 0.51 },
	      { 124159, 2 * 4.73036, 20.10, 0.21 },
	      { 124162, 2 * 4.73035, 19.73, 0.16 },
	      { 124164, 2 * 4.73038, 19.99, 0.52 },
	      { 124165, 2 * 4.73033, 19.80, 0.16 },
	      { 124166, 2 * 4.73039, 19.86, 0.16 },
	      { 124167, 2 * 4.73038, 19.93, 0.16 },
	      { 124170, 2 * 4.73038, 19.95, 0.20 },
	      { 124171, 2 * 4.73039, 19.68, 0.16 },
	      { 124172, 2 * 4.73038, 19.74, 0.15 },
	      { 124173, 2 * 4.73035, 19.93, 0.14 },
	      { 124174, 2 * 4.73039, 19.62, 0.14 },
	      { 124175, 2 * 4.73041, 19.82, 0.14 },
	      { 124176, 2 * 4.73041, 20.02, 0.15 },
	      { 124177, 2 * 4.73041, 19.80, 0.15 },
	      { 124178, 2 * 4.73044, 20.01, 0.34 },
	      { 124179, 2 * 4.73040, 19.77, 0.15 },
	      { 124181, 2 * 4.73041, 19.88, 0.16 },
	      { 124185, 2 * 4.73043, 19.43, 0.23 },
	      { 124186, 2 * 4.73044, 19.87, 0.15 },
	      { 124188, 2 * 4.73043, 19.74, 0.17 },
	      { 124190, 2 * 4.73043, 19.55, 0.14 },
	      { 124192, 2 * 4.73043, 19.88, 0.15 },
	      { 124193, 2 * 4.73043, 19.91, 0.15 },
	      { 124194, 2 * 4.73043, 19.66, 0.14 } };

dec25scan = { { 122536, 2 * 5.19045, 3.40, 0.06 },
	      { 122537, 2 * 5.17431, 3.59, 0.06 },
	      { 122538, 2 * 5.18236, 5.03, 0.07 },
	      { 122539, 2 * 5.17240, 3.23, 0.06 },
	      { 122540, 2 * 5.18535, 3.68, 0.06 },
	      { 122541, 2 * 5.18846, 3.56, 0.06 },
	      { 122542, 2 * 5.17743, 5.92, 0.09 },
	      { 122545, 2 * 5.19046, 3.40, 0.06 },
	      { 122546, 2 * 5.17451, 3.74, 0.17 },
	      { 122548, 2 * 5.17449, 3.77, 0.07 },
	      { 122549, 2 * 5.18240, 5.04, 0.07 },
	      { 122550, 2 * 5.17246, 3.34, 0.06 },
	      { 122551, 2 * 5.18554, 3.75, 0.06 },
	      { 122555, 2 * 5.18845, 3.56, 0.07 },
	      { 122556, 2 * 5.17739, 6.14, 0.10 },
	      { 122557, 2 * 5.19046, 3.49, 0.07 },
	      { 122559, 2 * 5.17432, 3.57, 0.06 },
	      { 122560, 2 * 5.18237, 5.04, 0.08 },
	      { 122562, 2 * 5.18548, 3.67, 0.07 },
	      { 122563, 2 * 5.18843, 3.41, 0.06 },
	      { 122564, 2 * 5.17742, 5.99, 0.08 } };

dec25cont = { { 122585, 2 * 5.16514, 3.28, 0.05 },
	      { 122586, 2 * 5.16517, 3.16, 0.05 },
	      { 122587, 2 * 5.16517, 3.23, 0.05 },
	      { 122590, 2 * 5.16519, 3.16, 0.05 },
	      { 122593, 2 * 5.16519, 3.24, 0.08 },
	      { 122594, 2 * 5.16516, 3.16, 0.07 },
	      { 122595, 2 * 5.16516, 3.26, 0.15 },
	      { 122596, 2 * 5.16518, 3.23, 0.06 },
	      { 122599, 2 * 5.16519, 3.10, 0.10 },
	      { 122600, 2 * 5.16518, 3.54, 0.21 },
	      { 122602, 2 * 5.16518, 3.14, 0.05 },
	      { 122603, 2 * 5.16519, 3.17, 0.05 },
	      { 122604, 2 * 5.16524, 3.29, 0.05 },
	      { 122605, 2 * 5.16531, 3.19, 0.05 },
	      { 122606, 2 * 5.16528, 3.31, 0.09 } };

dec25peak = { { 122576, 2 * 5.17934, 7.04, 0.17 },
	      { 122577, 2 * 5.17936, 7.00, 0.09 },
	      { 122578, 2 * 5.17952, 7.02, 0.32 },
	      { 122579, 2 * 5.17939, 7.09, 0.16 },
	      { 122608, 2 * 5.17937, 6.95, 0.08 },
	      { 122610, 2 * 5.17940, 6.83, 0.07 },
	      { 122613, 2 * 5.17939, 7.10, 0.13 },
	      { 122614, 2 * 5.17942, 6.93, 0.07 },
	      { 122615, 2 * 5.17942, 6.95, 0.07 },
	      { 122616, 2 * 5.17942, 7.07, 0.07 },
	      { 122617, 2 * 5.17938, 7.03, 0.08 },
	      { 122618, 2 * 5.17942, 6.93, 0.07 },
	      { 122619, 2 * 5.17942, 7.01, 0.07 },
	      { 122620, 2 * 5.17942, 7.01, 0.07 },
	      { 122622, 2 * 5.17944, 6.61, 0.22 },
	      { 122623, 2 * 5.17945, 6.89, 0.10 },
	      { 122625, 2 * 5.17945, 7.01, 0.08 },
	      { 122626, 2 * 5.17942, 7.00, 0.07 },
	      { 122627, 2 * 5.17942, 7.15, 0.27 },
	      { 122628, 2 * 5.17942, 6.95, 0.14 },
	      { 122629, 2 * 5.17942, 7.00, 0.07 },
	      { 122630, 2 * 5.17943, 6.97, 0.07 },
	      { 122631, 2 * 5.17939, 6.82, 0.14 },
	      { 122632, 2 * 5.17949, 7.09, 0.13 },
	      { 122634, 2 * 5.17952, 7.10, 0.11 },
	      { 122640, 2 * 5.17949, 6.88, 0.09 },
	      { 122641, 2 * 5.17952, 6.89, 0.07 },
	      { 122642, 2 * 5.17952, 6.98, 0.07 },
	      { 122643, 2 * 5.17949, 6.90, 0.07 },
	      { 122646, 2 * 5.17949, 7.03, 0.10 },
	      { 122647, 2 * 5.17952, 6.94, 0.11 },
	      { 122648, 2 * 5.17949, 6.95, 0.10 },
	      { 122649, 2 * 5.17952, 6.97, 0.07 },
	      { 122650, 2 * 5.17955, 6.92, 0.07 },
	      { 122653, 2 * 5.17954, 6.99, 0.07 },
	      { 122654, 2 * 5.17952, 6.83, 0.07 },
	      { 122657, 2 * 5.17954, 7.00, 0.09 },
	      { 122658, 2 * 5.17952, 6.81, 0.11 },
	      { 122661, 2 * 5.17952, 6.99, 0.12 },
	      { 122665, 2 * 5.17954, 6.93, 0.08 },
	      { 122667, 2 * 5.17952, 6.90, 0.10 },
	      { 122668, 2 * 5.17955, 6.56, 0.28 },
	      { 122669, 2 * 5.17954, 6.81, 0.24 },
	      { 122672, 2 * 5.17954, 6.83, 0.07 },
	      { 122673, 2 * 5.17957, 6.91, 0.07 } };

dec25p2scan = { { 122536, 2 * 5.19045, 3.35 },
		{ 122537, 2 * 5.17431, 3.57 },
		{ 122538, 2 * 5.18236, 5.00 },
		{ 122539, 2 * 5.17240, 3.22 },
		{ 122540, 2 * 5.18535, 3.64 },
		{ 122541, 2 * 5.18846, 3.51 },
		{ 122542, 2 * 5.17743, 5.90 },
		{ 122545, 2 * 5.19046, 3.37 },
		{ 122548, 2 * 5.17449, 3.76 },
		{ 122549, 2 * 5.18240, 5.01 },
		{ 122550, 2 * 5.17246, 3.32 },
		{ 122551, 2 * 5.18554, 3.70 },
		{ 122555, 2 * 5.18845, 3.53 },
		{ 122556, 2 * 5.17739, 6.09 },
		{ 122557, 2 * 5.19046, 3.47 },
		{ 122559, 2 * 5.17432, 3.54 },
		{ 122560, 2 * 5.18237, 4.99 },
		{ 122562, 2 * 5.18548, 3.63 },
		{ 122563, 2 * 5.18843, 3.39 },
		{ 122564, 2 * 5.17742, 5.94 } };

dec25p2cont = { { 122585, 2 * 5.16514, 3.25 },
		{ 122586, 2 * 5.16517, 3.15 },
		{ 122587, 2 * 5.16517, 3.21 },
		{ 122590, 2 * 5.16519, 3.13 },
		{ 122593, 2 * 5.16519, 3.21 },
		{ 122594, 2 * 5.16516, 3.12 },
		{ 122596, 2 * 5.16518, 3.23 },
		{ 122599, 2 * 5.16519, 3.08 },
		{ 122602, 2 * 5.16518, 3.13 },
		{ 122603, 2 * 5.16519, 3.16 },
		{ 122604, 2 * 5.16524, 3.27 },
		{ 122605, 2 * 5.16531, 3.18 },
		{ 122606, 2 * 5.16528, 3.30 } };

dec25p2peak = { { 122576, 2 * 5.17934, 6.98 },
		{ 122577, 2 * 5.17936, 6.96 },
		{ 122579, 2 * 5.17939, 6.99 },
		{ 122608, 2 * 5.17937, 6.91 },
		{ 122610, 2 * 5.17940, 6.79 },
		{ 122613, 2 * 5.17939, 7.06 },
		{ 122614, 2 * 5.17942, 6.89 },
		{ 122615, 2 * 5.17942, 6.90 },
		{ 122616, 2 * 5.17942, 7.02 },
		{ 122617, 2 * 5.17938, 6.99 },
		{ 122618, 2 * 5.17942, 6.90 },
		{ 122619, 2 * 5.17942, 6.96 },
		{ 122620, 2 * 5.17942, 6.96 },
		{ 122623, 2 * 5.17945, 6.84 },
		{ 122625, 2 * 5.17945, 6.98 },
		{ 122626, 2 * 5.17942, 6.94 },
		{ 122628, 2 * 5.17942, 6.90 },
		{ 122629, 2 * 5.17942, 6.96 },
		{ 122630, 2 * 5.17943, 6.93 },
		{ 122631, 2 * 5.17939, 6.74 },
		{ 122632, 2 * 5.17949, 7.05 },
		{ 122634, 2 * 5.17952, 7.08 },
		{ 122640, 2 * 5.17949, 6.85 },
		{ 122641, 2 * 5.17952, 6.84 },
		{ 122642, 2 * 5.17952, 6.93 },
		{ 122643, 2 * 5.17949, 6.86 },
		{ 122646, 2 * 5.17949, 6.98 },
		{ 122647, 2 * 5.17952, 6.88 },
		{ 122648, 2 * 5.17949, 6.90 },
		{ 122649, 2 * 5.17952, 6.93 },
		{ 122650, 2 * 5.17955, 6.88 },
		{ 122653, 2 * 5.17954, 6.94 },
		{ 122654, 2 * 5.17952, 6.79 },
		{ 122657, 2 * 5.17954, 6.93 },
		{ 122658, 2 * 5.17952, 6.75 },
		{ 122661, 2 * 5.17952, 6.96 },
		{ 122665, 2 * 5.17954, 6.87 },
		{ 122667, 2 * 5.17952, 6.85 },
		{ 122672, 2 * 5.17954, 6.79 },
		{ 122673, 2 * 5.17957, 6.85 } };

( firstfit = FitToFunc[ KuraevFadinY2s, {#[[2]], #[[3]], #[[4]]}& /@ firstscan ] ) // InputForm

Out[82]//InputForm= 
{23.33017825779937, 19, {KFJustFunc, {121.23658765187504, 10.024578821078274, 
   4.021987112806487, 3.778692020351316}, {area, mean, sigma, back}, 
  {"MeV nb", "GeV", "MeV", "nb"}, 
  {{1.7750181764092883, 0.00002102514762631276, 0.03344322538183753, 
    -0.030638997494412942}, {0.000021025147626312758, 1.0791010720013589*^-9, 
    -2.1841131332545865*^-8, -4.548731841065295*^-8}, 
   {0.03344322538183753, -2.1841131332545753*^-8, 0.002179022517391801, 
    -0.0008269396418274192}, {-0.030638997494412942, -4.5487318410652867*^-8, 
    -0.0008269396418274192, 0.0009074737428455824}}}}

( secondfit = FitToFunc[ KuraevFadinY2s, {#[[2]], #[[3]], #[[4]]}& /@ secondscan ] ) // InputForm

Out[83]//InputForm= 
{10.444091127807098, 10, {KFJustFunc, {122.80671435211937, 
   10.024503448170469, 4.050851037737133, 3.825915826000087}, 
  {area, mean, sigma, back}, {"MeV nb", "GeV", "MeV", "nb"}, 
  {{1.7396782882126616, 0.000022349403507479416, 0.017887919160070515, 
    -0.0292319820456956}, {0.000022349403507479402, 1.566943082953556*^-9, 
    -1.2251466026569056*^-6, 1.6214842257413923*^-7}, 
   {0.01788791916007053, -1.2251466026569052*^-6, 0.00382832521916155, 
    -0.0010635937277904892}, {-0.029231982045695607, 1.6214842257413884*^-7, 
    -0.001063593727790489, 0.0010019227065924453}}}}

( feb20fit = FitToFunc[ KuraevFadinY1s, {#[[2]], #[[3]], #[[4]]}& /@ feb20scan ] ) // InputForm

Out[84]//InputForm= 
{7.74440035259133, 12, {KFJustFunc, {293.86588756292406, 9.46023829657171, 
   3.8244176964508436, 3.678918053556717}, {area, mean, sigma, back}, 
  {"MeV nb", "GeV", "MeV", "nb"}, 
  {{4.672829310756085, 0.00001952958001394861, 0.0340893101636065, 
    -0.07509968918230941}, {0.000019529580013948605, 3.56468923767718*^-10, 
    1.4905605094983774*^-7, -1.7901195455474796*^-7}, 
   {0.03408931016360651, 1.4905605094983782*^-7, 0.0007580234363049979, 
    -0.0008134735391943459}, {-0.07509968918230941, -1.7901195455474793*^-7, 
    -0.0008134735391943457, 0.001874239609996906}}}}

( dec25fit = FitToFunc[ KuraevFadin, {#[[2]], #[[3]], #[[4]]}& /@ dec25scan ] ) // InputForm

Out[86]//InputForm= 
{15.217009206371223, 17, {KFJustFunc, {81.7307774643921, 10.358038699848828, 
   4.510632204306777, 3.900443105714645}, {area, mean, sigma, back}, 
  {"MeV nb", "GeV", "MeV", "nb"}, 
  {{1.2037978972690178, 2.0044620160837528*^-7, 0.02197575919126504, 
    -0.01474468212213447}, {2.0044620160825177*^-7, 2.848481197360721*^-9, 
    -1.7508929178941143*^-6, 2.320157127568278*^-7}, 
   {0.021975759191265, -1.7508929178941151*^-6, 0.006762539354295623, 
    -0.001021997798482175}, {-0.014744682122134464, 2.3201571275682854*^-7, 
    -0.0010219977984821757, 0.0004293785047548403}}}}

Residual[ f:Func, energy_, hxc_, uncert_ ] :=
    { EvalFunc[ f, energy ] - hxc, Sqrt[ uncert^2 + EvalUncertFunc[ f, energy ] ] };
Residualizer[ f:Func, run_, energy_, hxc_, uncert_ ] :=
    {
	{ run, EvalFunc[ f, energy ] - hxc }, ErrorBar[uncert]
    };
AbsResidualizer[ f:Func, run_, energy_, hxc_, uncert_ ] :=
    {
	{ run, ( EvalFunc[ f, energy ] - hxc ) / uncert }
    };

WeightedMean[ Residual[ firstfit[[3]], #[[2]], #[[3]], #[[4]] ]& /@ firstpeak ]

Out[229]= {0.1504, 0.0469296}

WeightedMean[ Residual[ secondfit[[3]], #[[2]], #[[3]], #[[4]] ]& /@ secondpeak ]

Out[228]= {0.317892, 0.0619577}

WeightedMean[ Residual[ dec25fit[[3]], #[[2]], #[[3]], #[[4]] ]& /@ dec25peak ]

Out[230]= {0.110538, 0.0440649}

WeightedMean[ Residual[ feb20fit[[3]], #[[2]], #[[3]], #[[4]] ]& /@ feb20peak ]

Out[231]= {0.0809419, 0.0627796}

(* {start, end} = { First[#], Last[#] }&[ Sort[ #[[1]]& /@ Join[ feb20scan, feb20cont, feb20peak ] ] ] *)

$DisplayFunction = Display["secondplot.eps", #, "EPS"]&;
Show[ GraphicsArray[ {
    {
	MultipleListPlot[ Residualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondscan
			  , Residualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondcont
			  , Residualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondpeak
			  , PlotJoined -> {False, False, False}
			  , PlotLegend -> {"Scan", "Cont", "Peak"}
			  , SymbolShape -> {PlotSymbol[Box], PlotSymbol[Star,3],
					    MakeSymbol[{RegularPolygon[3,3]}]}
			  , LegendSize -> {0.5,0.3}
			  , PlotRange -> {Automatic,{-1,1}}
			  , Axes -> {True,False}
			  , Frame -> True
			  , FrameLabel -> {"Run Number", "nb from Fit", None, None}
			  , AspectRatio -> 0.6
			  , DisplayFunction -> Identity
			]
    },
    {
	MultipleListPlot[ AbsResidualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondscan
			  , AbsResidualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondcont
			  , AbsResidualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondpeak
			  , PlotLegend -> {"Scan", "Cont", "Peak"}
			  , SymbolShape -> {PlotSymbol[Box], PlotSymbol[Star,3],
					    MakeSymbol[{RegularPolygon[3,3]}]}
			  , LegendSize -> {0.5,0.3}
			  , PlotRange -> {Automatic,{-6,6}}
			  , Axes -> {True,False}
			  , Frame -> True
			  , FrameLabel -> {"Run Number", "Sigmas from Fit", None, None}
			  , AspectRatio -> 0.6
			  , DisplayFunction -> Identity
			]
    } }
		     , Frame -> True
		     , FrameLabel -> { None, None, "Residuals of Second Y(2s) data to scan-only fit", None }
		   ]
      , ImageSize -> 72 * 7
      , DisplayFunction -> $DisplayFunction
    ];

$DisplayFunction = ( Display["dec25p2plot.eps",#,"EPS"] )&;
MultipleListPlot[ { #[[1]], EvalFunc[ dec25fit[[3]], #[[2]] ] - #[[3]] }&
		  /@ dec25p2scan
		  , { #[[1]], EvalFunc[ dec25fit[[3]], #[[2]] ] - #[[3]] }&
		  /@ dec25p2cont
		  , { #[[1]], EvalFunc[ dec25fit[[3]], #[[2]] ] - #[[3]] }&
		  /@ dec25p2peak
		  , PlotLegend -> {"Scan", "Cont", "Peak"}
		  , SymbolShape -> {PlotSymbol[Box], PlotSymbol[Star,3], MakeSymbol[{RegularPolygon[3,3]}]}
		  , LegendSize -> {0.5,0.3}
		  , PlotRange -> {Automatic,{-1,1}}
		  , Axes -> {True,False}
		  , Frame -> True
		  , FrameLabel -> {"Run Number", "nb from Fit",
				   "Residuals of Dec 25 Y(3s) PASS2 data to scan-only fit", None}
		  , ImageSize -> 72 * 7
		];

$DisplayFunction = Display["secondreplot.eps", #, "EPS"]&;
Show[ GraphicsArray[ {
    {
	MultipleListPlot[ Residualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondscan
			  , Residualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondcont
			  , Residualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondpeak
			  , Sort[ { #[[1]], EvalUncertFunc[ secondfit[[3]], #[[2]] ] }&
				  /@ Join[ secondscan, secondcont, secondpeak ],
				  (#1[[1]] > #2[[1]])& ]
			  , Sort[ { #[[1]], -EvalUncertFunc[ secondfit[[3]], #[[2]] ] }&
				  /@ Join[ secondscan, secondcont, secondpeak ],
				  (#1[[1]] > #2[[1]])& ]
			  , PlotJoined -> {False, False, False, True, True}
			  , PlotLegend -> {"Scan", "Cont", "Peak", "Fit Uncert", "(one sigma)"}
			  , SymbolShape -> {PlotSymbol[Box], PlotSymbol[Star,3],
					    MakeSymbol[{RegularPolygon[3,3]}], None, None}
			  , PlotStyle -> {Dashing[{}], Dashing[{}], Dashing[{}],
					  Dashing[{0.01,0.01}], Dashing[{0.01,0.01}]}
			  , LegendPosition -> {-0.6,0.45}
			  , LegendSize -> {0.5,0.3}
			  , PlotRange -> {Automatic,{-1,1}}
			  , Axes -> {True,False}
			  , Frame -> True
			  , FrameLabel -> {"Run Number", "nb from Fit", None, None}
			  , AspectRatio -> 0.6
			  , DisplayFunction -> Identity
			]
    },
    {
	MultipleListPlot[ AbsResidualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondscan
			  , AbsResidualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondcont
			  , AbsResidualizer[ secondfit[[3]], #[[1]], #[[2]], #[[3]], #[[4]] ]&
			  /@ secondpeak
			  , Sort[ { #[[1]], EvalUncertFunc[ secondfit[[3]], #[[2]] ] / #[[4]] }&
				  /@ Join[ secondscan, secondcont, secondpeak ],
				  (#1[[1]] > #2[[1]])& ]
			  , Sort[ { #[[1]], -EvalUncertFunc[ secondfit[[3]], #[[2]] ] / #[[4]] }&
				  /@ Join[ secondscan, secondcont, secondpeak ],
				  (#1[[1]] > #2[[1]])& ]
			  , PlotJoined -> {False, False, False, True, True}
			  , PlotLegend -> {"Scan", "Cont", "Peak", "Fit Uncert", "(one sigma)"}
			  , SymbolShape -> {PlotSymbol[Box], PlotSymbol[Star,3],
					    MakeSymbol[{RegularPolygon[3,3]}], None, None}
			  , PlotStyle -> {Dashing[{}], Dashing[{}], Dashing[{}],
					  Dashing[{0.01,0.01}], Dashing[{0.01,0.01}]}
			  , LegendPosition -> {-0.6,0.45}
			  , LegendSize -> {0.5,0.3}
			  , PlotRange -> {Automatic,{-6,6}}
			  , Axes -> {True,False}
			  , Frame -> True
			  , FrameLabel -> {"Run Number", "Sigmas from Fit", None, None}
			  , AspectRatio -> 0.6
			  , DisplayFunction -> Identity
			]
    } }
		     , Frame -> True
		     , FrameLabel -> { None, None, "Residuals of Second Y(2s) data to scan-only fit", None }
		   ]
      , ImageSize -> 72 * 7
      , DisplayFunction -> $DisplayFunction
    ];


Exit
[Mathematica finished.]
